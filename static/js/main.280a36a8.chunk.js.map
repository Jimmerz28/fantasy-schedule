{"version":3,"sources":["components/Tags.module.css","components/Nav.module.css","components/EventDetail.module.css","components/EventList.module.css","components/Dialog.module.css","Actions.js","constants.js","helpers.js","Reducers.js","Store.js","components/RelatedEvents.js","components/EventDetail.js","components/Dialog.js","components/Event.js","components/EventList.js","components/Nav.js","components/Tags.js","polyfills.js","selectors.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","tags","tag","-checked","event-days","-active","location","events","event-dialog","REQUEST_EVENTS","requestEvents","type","RECEIVE_EVENTS","fetchPosts","dispatch","fetch","then","res","json","error","console","ADD_TAG","REMOVE_TAG","ADD_FAVORITE","REMOVE_FAVORITE","FILTER_FAVORITES","SELECT_EVENT","colors","dateTimeFormat","dateFormat","headerDateFormat","naviDateFormat","createDate","date","format","arguments","length","undefined","Object","parse","Date","chunkEvents","reduce","acc","event","day","esm_format","found","find","chunk","push","sort","a","b","first","next","compareAsc","filters","onlyFavs","Reducers","redux","state","_ref","_ref2","_toConsumableArray","Set","map","index","color","favorites","_ref4","eventID","concat","filter","current","_ref3","_ref3$checked","checked","_objectSpread","selectedEvent","_ref5","id","loggerMiddleware","redux_logger","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","redux_thunk_es","Store","components_RelatedEvents","relatedEvents","children","react_default","createElement","components_EventDetail","className","EventDetail_module_default","end","eventStartEndTime","slice","components_Dialog","show","onClose","Dialog_module_default","onClick","components_Event","onFav","isFav","bind","htmlFor","name","onChange","components_EventList","favs","onEventClick","list","stringFormat","daysEvents","includes","key","replace","EventList_module_default","components_Nav","activeDay","hash","target","_this","setState","_this2","this","props","days","i","value","formatted","href","classes","classnames_default","Nav_defineProperty","Nav_module_default","react","cx","bind_default","Tags_module_default","Tags","selectedTags","onTagSelection","style","--tag-color","polyfills","getEvents","selectors_filteredEvents","lib","filterdResults","eventDays","selectors_chosenEvent","some","singleEvent","selectors_relatedEvents","filteredEvents","chosenEvent","related","apply","selectors_toConsumableArray","App_App","_ref$target","removeTag","_ref2$target","removeFavorite","onFilterFavs","filterFavs","onShowDialog","selectEvent","eventDialog","showModal","onHideDialog","close","registerDialog","info","showDialog","dialogEvent","document","querySelector","src_App_0","es","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","react_dom_default","render","store","getElementById","URL","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.280a36a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"Tags_tags__33cad\",\"tag\":\"Tags_tag__1DkF9\",\"-checked\":\"Tags_-checked__2JlTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event-days\":\"Nav_event-days__3gjk_\",\"-active\":\"Nav_-active__3hA8p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"location\":\"EventDetail_location__WlgXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"events\":\"EventList_events___LJlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event-dialog\":\"Dialog_event-dialog__2sWkN\"};","// See: https://redux.js.org/advanced/async-actions#actions-js-asynchronous\nexport const REQUEST_EVENTS = \"EVENTS::REQUEST\";\nfunction requestEvents() {\n    return {\n        type: REQUEST_EVENTS\n    };\n}\n\nexport const RECEIVE_EVENTS = \"EVENTS::RECIEVED\";\nfunction receiveEvents(events) {\n    return {\n        type: RECEIVE_EVENTS,\n        events\n    };\n}\n\nexport function fetchPosts() {\n    return function (dispatch) {\n        dispatch(requestEvents);\n\n        return fetch(process.env.REACT_APP_EVENTS_URL)\n            .then(res => res.json(), error => console.error(error))\n\n            .then(json => {\n                dispatch(receiveEvents(json));\n            });\n    };\n}\n\nexport const ADD_TAG = \"TAG::ADD\";\nexport function addTag(tag) {\n    return {\n        type: ADD_TAG,\n        tag\n    }\n}\n\nexport const REMOVE_TAG = \"TAG::REMOVE\";\nexport function removeTag(tag) {\n    return {\n        type: REMOVE_TAG,\n        tag\n    }\n}\n\nexport const ADD_FAVORITE = \"FAVORITE::ADD\";\nexport function addFavorite(eventID) {\n    return {\n        type: ADD_FAVORITE,\n        eventID\n    }\n}\n\nexport const REMOVE_FAVORITE = \"FAVORITE::REMOVE\";\nexport function removeFavorite(eventID) {\n    return {\n        type: REMOVE_FAVORITE,\n        eventID\n    }\n}\n\nexport const FILTER_FAVORITES = \"FAVORITES::FILTER\";\nexport function filterFavs(checked) {\n    return {\n        type: FILTER_FAVORITES,\n        checked\n    }\n}\n\nexport const SELECT_EVENT = \"EVENT::SELECTED\";\nexport function selectEvent(id) {\n    return {\n        type: SELECT_EVENT,\n        id\n    }\n}\n","// Generated via http://tools.medialab.sciences-po.fr/iwanthue/index.php\nexport const colors = [\n    \"#d7f2cc\",\n    \"#88aee1\",\n    \"#e6d3a5\",\n    \"#cec9f3\",\n    \"#b9cda1\",\n    \"#dfbbe3\",\n    \"#96bfad\",\n    \"#e8a9a5\",\n    \"#90d3e0\",\n    \"#f3d7b6\",\n    \"#a5cbeb\",\n    \"#ccb295\",\n    \"#b9aace\",\n    \"#c1e2d3\",\n    \"#dfb9be\",\n    \"#c7dfee\",\n    \"#ead9c9\",\n    \"#a9b6cc\",\n    \"#e5d1e3\"\n];\n\nexport const dateTimeFormat = \"MM/dd/yyyy hh:mm aaa\";\nexport const dateFormat = \"M/dd/yyyy\";\nexport const headerDateFormat = \"eeee, LLL d\";\nexport const naviDateFormat = \"MMM d\";\n","// @flow\n\nimport { format, parse } from \"date-fns\";\nimport { compareAsc } from \"date-fns\";\n\nimport { dateFormat, dateTimeFormat, headerDateFormat, naviDateFormat } from \"./constants\";\nimport type { DaysEvents, VanillaEvent } from './types';\n\nexport function createDate(date, withTime = true) {\n    const format = withTime ? dateTimeFormat : dateFormat;\n\n    return parse(date, format, new Date());\n}\n\nexport function createDayID(date, stringFormat) {\n    return format(parse(date, stringFormat, new Date()), naviDateFormat).replace(\" \", \"-\");\n}\n\n// @TODO: This will need to be more robust since some events are overnight\nexport function eventStartEndTime(event: VanillaEvent) {\n    const end = createDate(event[\"End Date & Time\"]);\n    return `${format(event[\"Start Date & Time\"], \"EEE. MMM d, h:mm aaa\")} - ${format(end, \"h:mm aaa\")}`;\n}\n\nexport function chunkEvents(events: Array<VanillaEvent>) {\n    const chunked = events.reduce((acc: Array<DaysEvents>, event: VanillaEvent) => {\n\n        if (typeof event[\"Start Date & Time\"] === \"string\") {\n            event[\"Start Date & Time\"] = createDate(event[\"Start Date & Time\"]);\n        }\n\n        const day: string = format(event[\"Start Date & Time\"], headerDateFormat);\n        const found: void | DaysEvents = acc.find(chunk => chunk.day === day);\n\n        if (found) {\n            found.events.push(event);\n        } else {\n            acc.push({ day, events: [event] });\n        }\n\n        return acc;\n\n    }, []);\n\n    return chunked.sort((a, b) => {\n        const first = parse(a.day, headerDateFormat, new Date());\n        const next = parse(b.day, headerDateFormat, new Date());\n\n        return compareAsc(first, next);\n    });\n}\n","// @flow\n\nimport { combineReducers } from \"redux\";\nimport { ADD_FAVORITE, ADD_TAG, FILTER_FAVORITES, RECEIVE_EVENTS, REMOVE_FAVORITE, REMOVE_TAG, SELECT_EVENT } from \"./Actions\";\nimport { colors } from \"./constants\";\nimport { chunkEvents } from \"./helpers\";\nimport type { VanillaEvent } from \"./types\";\n\nfunction events(state = [], { type, events }: { type: string, events: Array<VanillaEvent> }) {\n    switch (type) {\n\n        case RECEIVE_EVENTS:\n\n            // We want to split up the date events into days\n            return chunkEvents(events);\n\n        default:\n            return state;\n    }\n}\n\nfunction tags(state = [], { type, events }) {\n    switch (type) {\n        case RECEIVE_EVENTS:\n            return [...new Set(events.map(event => event['Event Type']))]\n                .sort()\n                .map((tag, index) => {\n                    return {\n                        tag,\n                        color: colors[index]\n                    }\n                });\n        default:\n            return state;\n    }\n}\n\nconst filters = {\n    tags: [],\n    onlyFavs: false\n};\nfunction filter(state = filters, { type, tag, checked = false }) {\n    switch (type) {\n\n        // @NOTE: Not sure if we need add/remove to be separate\n        case ADD_TAG:\n            return { ...state, tags: [...state.tags, tag] };\n        case REMOVE_TAG:\n            return { ...state, tags: state.tags.filter(current => current !== tag) };\n        case FILTER_FAVORITES:\n            return { ...state, onlyFavs: checked };\n        default:\n            return state;\n    }\n}\n\nfunction favorites(state = [], { type, eventID }) {\n    switch (type) {\n        case ADD_FAVORITE:\n            return [...state, eventID];\n        case REMOVE_FAVORITE:\n            return state.filter(current => current !== eventID);\n        default:\n            return state;\n    }\n}\n\nfunction selectedEvent(state = '', { type, id }) {\n    switch (type) {\n        case SELECT_EVENT:\n            return id;\n        default:\n            return state;\n    }\n}\n\nconst genconApp = combineReducers({\n    events,\n    tags,\n    favorites,\n    filter,\n    selectedEvent\n});\n\nexport default genconApp;\n","import { applyMiddleware, compose, createStore } from \"redux\";\n\nimport { createLogger } from \"redux-logger\";\nimport genconApp from \"./Reducers\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst loggerMiddleware = createLogger();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet enhancer = composeEnhancers(applyMiddleware(\n    thunkMiddleware,\n    loggerMiddleware\n));\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunkMiddleware);\n}\n\nconst store = createStore(\n    genconApp,\n    enhancer\n);\n\nexport default store;\n","import React from 'react';\n\nimport type { VanillaEvent } from '../types';\n\nconst RelatedEvents = ({ relatedEvents, children }): { relatedEvents: Array<VanillaEvent> } => {\n\n    return (\n        <div>\n            <h2>Related Events</h2>\n            { children }\n        </div>\n    );\n}\n\nexport default RelatedEvents;\n","// @flow\n\nimport React from 'react';\n\nimport { eventStartEndTime } from '../helpers';\nimport type { VanillaEvent } from '../types';\nimport styles from \"./EventDetail.module.css\";\nimport RelatedEvents from './RelatedEvents';\n\nconst EventDetail = ({ event, relatedEvents }: { event: VanillaEvent, relatedEvents: RelatedEvents }) => {\n\n    return (\n        <div className={ styles[\"event-detail\"] }>\n            <h1>{event[\"Title\"]}</h1>\n            <p>{eventStartEndTime(event)}</p>\n            <p className={ styles[\"location\"] }>\n                <span>{event[\"Location\"]}</span>\n                <span>{event[\"Room Name\"]}</span>\n                <span>{event[\"Table Number\"]}</span>\n            </p>\n            <p>{event[\"Short Description\"]}</p>\n            <p>{event[\"Long Description\"]}</p>\n            <p>{event[\"Event Type\"].slice(6)}</p>\n            { relatedEvents }\n        </div>\n    );\n}\n\nexport default EventDetail;\n","// @flow\n\nimport React from 'react';\n\nimport type { VanillaEvent } from '../types';\nimport styles from './Dialog.module.css';\nimport EventDetail from './EventDetail';\n\nconst Dialog = ({ show, event, onClose, relatedEvents }: {\n            show: boolean,\n            event: VanillaEvent,\n            onClose: Function,\n            relatedEvents: Array<VanillaEvent>\n        }) => {\n\n    return (\n        <dialog className={ styles[\"event-dialog\"] }>\n            <section>\n                <button type=\"button\" onClick={onClose}>Close</button>\n                { event  &&\n                    <EventDetail event={event} relatedEvents={relatedEvents}/> }\n            </section>\n        </dialog>\n    );\n}\n\nexport default Dialog;\n","import React from 'react';\n\nconst Event = ({ event, onClick, onFav, isFav }) => {\n\n    const id = event[\"Game ID\"];\n\n    return (\n        <li onClick={onClick.bind(this, id)}>\n            <p>{event[\"Title\"]}</p>\n            <p>{event[\"Event Type\"]}</p>\n            <label htmlFor={id}>Favorite</label>\n            <input type=\"checkbox\" name={id} id={id}\n                onChange={onFav} checked={isFav} />\n        </li>\n    );\n}\n\nexport default Event;\n","// @flow\n\nimport React from 'react';\n\nimport { headerDateFormat } from \"../constants\";\nimport { createDayID } from \"../helpers\";\nimport Event from './Event';\nimport styles from \"./EventList.module.css\";\n\ntype Props = {\n    events: DaysEvents,\n    onFav: Function,\n    favs: Array<string>,\n    onEventClick: Function\n}\n\nconst EventList = ({ events, onFav, favs, onEventClick }: Props) => {\n\n    const list = events.map(({ day, events }) => {\n\n        const daysEvents = events.map(event => {\n\n                const id = event[\"Game ID\"];\n                const isFav = favs.includes(id);\n\n                // @TODO: Don't trigger the dialog if the favorite input is clicked\n                return (\n                    <Event\n                        key={ id }\n                        event={ event }\n                        isFav={ isFav }\n                        onClick={ onEventClick }\n                        onFav={ onFav }\n                    />\n                );\n            });\n\n        return (\n            <div key={day} id={ createDayID(day, headerDateFormat) }>\n                <h2>{day}</h2>\n                <ul>{daysEvents}</ul>\n            </div>\n        );\n\n    });\n\n    return (\n        <div className={ styles.events }>\n            <ul>{list}</ul>\n        </div>\n    );\n}\n\nexport default EventList;\n","// @flow\n\nimport classNames from \"classnames\";\nimport React, { Component } from 'react';\n\nimport type { NaviDay } from \"../types\";\nimport styles from \"./Nav.module.css\";\n\ntype P = {\n    days: Array<NaviDay>\n};\n\ntype S = {\n    activeDay: string;\n};\n\nclass Nav extends Component<P, S> {\n\n    state = {\n        activeDay: ''\n    };\n\n    onClick = ({ target: { hash } }: { target: HTMLAnchorElement }) => {\n        this.setState({ activeDay: hash });\n    }\n\n    render() {\n\n        const { days } = this.props;\n\n        const list = days.map(({ value, formatted }: { value: string, formatted: string }, i) => {\n\n            const href = `#${formatted}`.replace(\" \", \"-\");\n\n            // If no date is chosen mark the first as \"active\"\n            const classes = classNames({\n                [styles[\"-active\"]]: (this.state.activeDay === '' && i === 0) || (this.state.activeDay === href)\n            });\n\n            return <li key={value} className={classes}>\n                    <a href={href} onClick={this.onClick}>\n                        {formatted}\n                    </a>\n                </li>;\n        });\n\n        return (\n            <nav className={styles[\"event-days\"]}>\n                <ul>{list}</ul>\n            </nav>\n        );\n    }\n}\n\nexport default Nav;\n","import classNames from \"classnames/bind\";\nimport React from 'react';\nimport styles from './Tags.module.css';\n\nlet cx = classNames.bind(styles);\n\nconst TagList = ({tags, selectedTags, onTagSelection}) => {\n\n    const list = tags.map(({tag, color}) => {\n\n        const checked = selectedTags.includes(tag);\n        const classes = cx({\n            '-checked': checked,\n            tag: true\n        });\n\n        return (\n            <div key={tag} className={classes} style={{'--tag-color': color }}>\n                <label htmlFor={tag}><span>{tag.slice(6)}</span></label>\n                <input type=\"checkbox\" name={tag} id={tag} onChange={onTagSelection} checked={checked} />\n            </div>\n        );\n    });\n\n    return (\n        <div className={styles.tags}>\n            <form>{list}</form>\n        </div>\n    );\n};\n\nexport default TagList;\n","import * as dialogPolyfill from '../node_modules/dialog-polyfill/dialog-polyfill.js';\n\nexport default dialogPolyfill;\n","// @flow\n\nimport { format, parse } from \"date-fns\";\nimport { createSelector } from \"reselect\";\n\nimport { headerDateFormat, naviDateFormat } from \"./constants\";\nimport { chunkEvents } from \"./helpers\";\nimport type { DaysEvents, VanillaEvent } from \"./types\";\n\nconst getEvents = state => state.events;\nconst getSelectedTags = state => state.filter.tags;\nconst getFavs = state => state.favorites;\nconst isOnlyFavorites = state => state.filter.onlyFavs;\nconst selectedEventID = state => state.selectedEvent;\n\nexport const filteredEvents = createSelector(\n    [getSelectedTags, isOnlyFavorites, getFavs, getEvents],\n    (tags, onlyFavs, favs, events) => {\n        let filterdResults = events;\n\n        if (tags.length) {\n            filterdResults = filterdResults.map(({ day, events }) => {\n                return {\n                    day,\n                    events: events.filter(event =>\n                        tags.includes(event[\"Event Type\"])\n                    )\n                };\n            });\n        }\n\n        if (onlyFavs) {\n            filterdResults = filterdResults.map(({ day, events }) => {\n                return {\n                    day,\n                    events: events.filter(event =>\n                        favs.includes(event[\"Game ID\"])\n                    )\n                };\n            });\n        }\n\n        return filterdResults;\n    }\n);\n\nexport const eventDays = createSelector(\n    [getEvents],\n    (events) => {\n        return events.reduce((acc, event) => {\n            acc.push({\n                value: event.day,\n                formatted: format(\n                    parse(event.day, headerDateFormat, new Date()),\n                    naviDateFormat\n                )\n            });\n            return acc;\n        }, []);\n    }\n);\n\nexport const chosenEvent = createSelector(\n    [filteredEvents, selectedEventID],\n    (events: Array<DaysEvents>, eventID: string) => {\n        let selectedEvent = null;\n\n        events.some(({ day, events }) => {\n            selectedEvent = events.find((singleEvent: VanillaEvent) => singleEvent[\"Game ID\"] === eventID)\n\n            return selectedEvent;\n        });\n\n        return selectedEvent;\n    }\n);\n\n\nexport const relatedEvents = createSelector(\n    [filteredEvents, chosenEvent],\n    (filteredEvents: Array<DaysEvents>, chosenEvent: VanillaEvent) => {\n\n        if (!chosenEvent) {\n            return [];\n        }\n\n        const flatList = filteredEvents.reduce((acc, { day, events }) => {\n            const related = events.filter(event => (\n                event[\"Title\"] === chosenEvent[\"Title\"]) &&\n                (event[\"Game ID\"] !== chosenEvent[\"Game ID\"]));\n            acc.push(...related);\n            return acc;\n        }, []);\n\n        return chunkEvents(flatList);\n    }\n);\n","import \"./App.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n    addFavorite,\n    addTag,\n    fetchPosts,\n    filterFavs,\n    removeFavorite,\n    removeTag,\n    selectEvent\n} from \"./Actions\";\nimport store from \"./Store\";\nimport Dialog from \"./components/Dialog\";\nimport EventList from \"./components/EventList\";\nimport Nav from \"./components/Nav\";\nimport RelatedEvents from \"./components/RelatedEvents\";\nimport TagList from \"./components/Tags\";\nimport dialogPolyfill from './polyfills';\nimport { chosenEvent, eventDays, filteredEvents, relatedEvents } from \"./selectors\";\n\nconst mapStateToProps = state => {\n\n    const { tags, favorites, filter } = state;\n\n    return {\n        tags,\n        favorites,\n        filter,\n        dialogEvent: chosenEvent(state),\n        events: filteredEvents(state),\n        relatedEvents: relatedEvents(state),\n        days: eventDays(state)\n    };\n};\n\nclass App extends Component {\n    componentDidMount() {\n        store.dispatch(fetchPosts());\n\n        dialogPolyfill.registerDialog(this.eventDialog);\n    }\n\n    get eventDialog(): HTMLDialogElement {\n        const eventDialog = document.querySelector('dialog');\n\n        return eventDialog;\n    }\n\n    onTagSelection = ({ target: { name, checked } }) => {\n        if (checked) {\n            store.dispatch(addTag(name));\n        } else {\n            store.dispatch(removeTag(name));\n        }\n    };\n\n    onFav = ({ target: { id, checked } }) => {\n        if (checked) {\n            store.dispatch(addFavorite(id));\n        } else {\n            store.dispatch(removeFavorite(id));\n        }\n    };\n\n    onFilterFavs = ({ target: { checked } }) => {\n        store.dispatch(filterFavs(checked));\n    };\n\n    // @NOTE: Check if we can replace this with the native .showModal() API, however,\n    // will need a polyfill since support is shitty on mobile\n    onShowDialog = (id) => {\n        store.dispatch(selectEvent(id));\n        this.eventDialog.showModal();\n    }\n\n    onHideDialog = () => {\n        this.eventDialog.close();\n    }\n\n    render() {\n\n        const relatedEvents = this.props.relatedEvents.length > 0 && (\n            <RelatedEvents>\n                <EventList\n                    events={ this.props.relatedEvents }\n                    onFav={ this.onFav }\n                    onEventClick={ () => console.info(\"clicked\") }\n                    favs={ this.props.favorites }\n                />\n            </RelatedEvents>\n        );\n\n        return (\n            <div>\n                <Dialog\n                    show={this.props.showDialog}\n                    event={this.props.dialogEvent}\n                    relatedEvents={relatedEvents}\n                    onClose={this.onHideDialog}\n                />\n                <main className=\"app\">\n                    <div className=\"tag -fav\">\n                        <label htmlFor=\"only-favs\">Show Only Favorites</label>\n                        <input\n                            type=\"checkbox\"\n                            name=\"favs\"\n                            id=\"only-favs\"\n                            onChange={this.onFilterFavs}\n                        />\n                    </div>\n                    <TagList\n                        tags={this.props.tags}\n                        onTagSelection={this.onTagSelection}\n                        selectedTags={this.props.filter.tags}\n                    />\n                    <Nav days={this.props.days} />\n                    <EventList\n                        events={this.props.events}\n                        onFav={this.onFav}\n                        favs={this.props.favorites}\n                        onEventClick={this.onShowDialog}\n                    />\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport App from './App';\nimport store from \"./Store\";\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}