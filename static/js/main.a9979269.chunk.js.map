{"version":3,"sources":["components/Tags.module.css","components/Nav.module.css","components/EventList.module.css","Actions.js","constants.js","selectors.js","helpers.js","components/EventDetail.js","components/Dialog.js","components/EventList.js","components/Nav.js","components/Tags.js","Reducers.js","Store.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","tags","tag","-checked","event-days","-active","events","REQUEST_EVENTS","requestEvents","type","RECEIVE_EVENTS","fetchPosts","dispatch","fetch","then","res","json","error","console","ADD_TAG","REMOVE_TAG","ADD_FAVORITE","REMOVE_FAVORITE","FILTER_FAVORITES","SHOW_DIALOG","HIDE_DIALOG","colors","dateTimeFormat","dateFormat","headerDateFormat","naviDateFormat","getEvents","state","filteredEvents","Object","lib","filter","onlyFavs","favorites","favs","filterdResults","length","map","_ref","day","event","includes","_ref2","eventDays","reduce","acc","push","value","formatted","esm_format","parse","Date","chosenEvent","dialog","id","eventID","testValue","some","_ref3","find","singleEvent","createDate","date","format","arguments","undefined","components_EventDetail","react_default","a","createElement","end","concat","eventStartEndTime","className","slice","components_Dialog","show","onClose","visible","open","onClick","components_EventList","onFav","showDialog","list","stringFormat","daysEvents","checked","key","bind","htmlFor","name","onChange","replace","EventList_module_default","components_Nav","activeDay","hash","target","_this","setState","_this2","this","props","days","href","classes","classnames_default","classNames","Nav_module_default","react","cx","bind_default","Tags_module_default","Tags","selectedTags","onTagSelection","color","style","--tag-color","filters","dialogState","Reducers","redux","found","chunk","sort","b","first","next","compareAsc","_toConsumableArray","Set","index","_ref4","current","_ref3$checked","_objectSpread","_ref5","loggerMiddleware","redux_logger","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","redux_thunk_es","Store","App_App","_ref$target","removeTag","_ref2$target","removeFavorite","onFilterFavs","filterFavs","onShowDialog","Actions_showDialog","onHideDialog","dialogEvent","src_App_0","es","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","react_dom_default","render","store","document","getElementById","URL","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a9979269.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"Tags_tags__33cad\",\"tag\":\"Tags_tag__1DkF9\",\"-checked\":\"Tags_-checked__2JlTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event-days\":\"Nav_event-days__3gjk_\",\"-active\":\"Nav_-active__3hA8p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"events\":\"EventList_events___LJlq\"};","// See: https://redux.js.org/advanced/async-actions#actions-js-asynchronous\nexport const REQUEST_EVENTS = \"EVENTS::REQUEST\";\nfunction requestEvents() {\n    return {\n        type: REQUEST_EVENTS\n    };\n}\n\nexport const RECEIVE_EVENTS = \"EVENTS::RECIEVED\";\nfunction receiveEvents(events) {\n    return {\n        type: RECEIVE_EVENTS,\n        events\n    };\n}\n\nexport function fetchPosts() {\n    return function (dispatch) {\n        dispatch(requestEvents);\n\n        return fetch(process.env.REACT_APP_EVENTS_URL)\n            .then(res => res.json(), error => console.error(error))\n\n            .then(json => {\n                dispatch(receiveEvents(json));\n            });\n    };\n}\n\nexport const ADD_TAG = \"TAG::ADD\";\nexport function addTag(tag) {\n    return {\n        type: ADD_TAG,\n        tag\n    }\n}\n\nexport const REMOVE_TAG = \"TAG::REMOVE\";\nexport function removeTag(tag) {\n    return {\n        type: REMOVE_TAG,\n        tag\n    }\n}\n\nexport const ADD_FAVORITE = \"FAVORITE::ADD\";\nexport function addFavorite(eventID) {\n    return {\n        type: ADD_FAVORITE,\n        eventID\n    }\n}\n\nexport const REMOVE_FAVORITE = \"FAVORITE::REMOVE\";\nexport function removeFavorite(eventID) {\n    return {\n        type: REMOVE_FAVORITE,\n        eventID\n    }\n}\n\nexport const FILTER_FAVORITES = \"FAVORITES::FILTER\";\nexport function filterFavs(checked) {\n    return {\n        type: FILTER_FAVORITES,\n        checked\n    }\n}\n\nexport const SHOW_DIALOG = \"DIALOG::SHOW\";\nexport function showDialog(id) {\n    return {\n        type: SHOW_DIALOG,\n        id\n    }\n}\n\nexport const HIDE_DIALOG = \"DIALOG:HIDE\";\nexport function hideDialog() {\n    return {\n        type: HIDE_DIALOG\n    }\n}\n","// Generated via http://tools.medialab.sciences-po.fr/iwanthue/index.php\nexport const colors = [\n    \"#d7f2cc\",\n    \"#88aee1\",\n    \"#e6d3a5\",\n    \"#cec9f3\",\n    \"#b9cda1\",\n    \"#dfbbe3\",\n    \"#96bfad\",\n    \"#e8a9a5\",\n    \"#90d3e0\",\n    \"#f3d7b6\",\n    \"#a5cbeb\",\n    \"#ccb295\",\n    \"#b9aace\",\n    \"#c1e2d3\",\n    \"#dfb9be\",\n    \"#c7dfee\",\n    \"#ead9c9\",\n    \"#a9b6cc\",\n    \"#e5d1e3\"\n];\n\nexport const dateTimeFormat = \"MM/dd/yyyy hh:mm aaa\";\nexport const dateFormat = \"M/dd/yyyy\";\nexport const headerDateFormat = \"eeee, LLL d\";\nexport const naviDateFormat = \"MMM d\";\n","// @flow\n\nimport type { DaysEvents, VanillaEvent } from \"./types\";\nimport { format, parse } from \"date-fns\";\nimport { headerDateFormat, naviDateFormat } from \"./constants\";\n\nimport { createSelector } from \"reselect\";\n\nconst getEvents = state => state.events;\nconst getSelectedTags = state => state.filter.tags;\nconst getFavs = state => state.favorites;\nconst isOnlyFavorites = state => state.filter.onlyFavs;\nconst selectedEventID = state => state.dialog.id;\n\nexport const filteredEvents = createSelector(\n    [getSelectedTags, isOnlyFavorites, getFavs, getEvents],\n    (tags, onlyFavs, favs, events) => {\n        let filterdResults = events;\n\n        if (tags.length) {\n            filterdResults = filterdResults.map(({ day, events }) => {\n                return {\n                    day,\n                    events: events.filter(event =>\n                        tags.includes(event[\"Event Type\"])\n                    )\n                };\n            });\n        }\n\n        if (onlyFavs) {\n            filterdResults = filterdResults.map(({ day, events }) => {\n                return {\n                    day,\n                    events: events.filter(event =>\n                        favs.includes(event[\"Game ID\"])\n                    )\n                };\n            });\n        }\n\n        return filterdResults;\n    }\n);\n\nexport const eventDays = createSelector(\n    [getEvents],\n    (events) => {\n        return events.reduce((acc, event) => {\n            acc.push({\n                value: event.day,\n                formatted: format(\n                    parse(event.day, headerDateFormat, new Date()),\n                    naviDateFormat\n                )\n            });\n            return acc;\n        }, []);\n    }\n);\n\nexport const chosenEvent = createSelector(\n    [filteredEvents, selectedEventID],\n    (events: Array<DaysEvents>, eventID: string) => {\n        let testValue = null;\n\n        events.some(({ day, events }) => {\n            testValue = events.find((singleEvent: VanillaEvent) => singleEvent[\"Game ID\"] === eventID)\n\n            return testValue;\n        });\n\n        return testValue;\n    }\n);\n","import { dateFormat, dateTimeFormat, naviDateFormat } from \"./constants\";\nimport { format, parse } from \"date-fns\";\n\nimport type { VanillaEvent } from './types';\n\nexport function createDate(date, withTime = true) {\n    const format = withTime ? dateTimeFormat : dateFormat;\n\n    return parse(date, format, new Date());\n}\n\nexport function createDayID(date, stringFormat) {\n    return format(parse(date, stringFormat, new Date()), naviDateFormat).replace(\" \", \"-\");\n}\n\n// @TODO: This will need to be more robust since some events are overnight\nexport function eventStartEndTime(event: VanillaEvent) {\n    const end = createDate(event[\"End Date & Time\"]);\n    return `${format(event[\"Start Date & Time\"], \"EEE. MMM d, h:mm aaa\")} - ${format(end, \"h:mm aaa\")}`;\n}\n","// @flow\n\nimport React from 'react';\nimport type { VanillaEvent } from '../types';\nimport { eventStartEndTime } from '../helpers';\n\nconst EventDetail = ({ event }: { event: VanillaEvent }) => {\n    return (\n        <div>\n            <h1>{event[\"Title\"]}</h1>\n            <p>{eventStartEndTime(event)}</p>\n            <p className=\"location\">\n                <span>{event[\"Location\"]}</span>\n                <span>{event[\"Room Name\"]}</span>\n                <span>{event[\"Table Number\"]}</span>\n            </p>\n            <p>{event[\"Short Description\"]}</p>\n            <p>{event[\"Long Description\"]}</p>\n            <p>{event[\"Event Type\"].slice(6)}</p>\n        </div>\n    );\n}\n\nexport default EventDetail;\n","// @flow\n\nimport EventDetail from \"./EventDetail\";\nimport React from 'react';\nimport type { VanillaEvent } from '../types';\n\nconst Dialog = ({ show, event, onClose }: { show: boolean, event: VanillaEvent, onClose: Function }) => {\n\n    // If the user hasn't selected an event don't even bother rendering\n    if (!event) {\n        return null;\n    }\n\n    const visible = {\n        open: (show === true) ? true : null\n    };\n\n    return (\n        <dialog {...visible}>\n            <section>\n                <button type=\"button\" onClick={onClose}>Close</button>\n                <EventDetail event={event} />\n            </section>\n        </dialog>\n    );\n}\n\nexport default Dialog;\n","import React from 'react';\nimport { createDayID } from \"../helpers\";\nimport { headerDateFormat } from \"../constants\";\nimport styles from \"./EventList.module.css\";\n\nconst EventList = ({ events, onFav, favs, showDialog }) => {\n\n    const list = events.map(({ day, events }) => {\n\n        const daysEvents = events.map(event => {\n\n                const id = event[\"Game ID\"];\n                const checked = favs.includes(id);\n\n                // @TODO: Don't trigger the dialog if the favorite input is clicked\n                return (\n                    <li key={id} onClick={ showDialog.bind(this, id) }>\n                        <p>{event[\"Title\"]}</p>\n                        <p>{event[\"Event Type\"]}</p>\n                        <label htmlFor={id}>Favorite</label>\n                        <input type=\"checkbox\" name={id} id={id}\n                            onChange={onFav} checked={checked} />\n                    </li>\n                );\n            });\n\n        return (\n            <div key={day} id={ createDayID(day, headerDateFormat) }>\n                <h2>{day}</h2>\n                <ul>{daysEvents}</ul>\n            </div>\n        );\n\n    });\n\n    return (\n        <div className={ styles.events }>\n            <ul>{list}</ul>\n        </div>\n    );\n}\n\nexport default EventList;\n","// @flow\n\nimport React, { Component } from 'react';\n\nimport type { NaviDay } from \"../types\";\nimport classNames from \"classnames\";\nimport styles from \"./Nav.module.css\";\n\ntype P = {\n    days: Array<NaviDay>\n};\n\ntype S = {\n    activeDay: string;\n};\n\nclass Nav extends Component<P, S> {\n\n    state = {\n        activeDay: ''\n    };\n\n    onClick = ({ target: { hash } }: { target: HTMLAnchorElement }) => {\n        this.setState({ activeDay: hash });\n    }\n\n    render() {\n\n        const { days } = this.props;\n\n        const list = days.map(({ value, formatted }: { value: string, formatted: string }) => {\n\n            const href = `#${formatted}`.replace(\" \", \"-\");\n\n            const classes = classNames({ [styles[\"-active\"]]: (href === this.state.activeDay) });\n\n            return <li key={value} className={classes}>\n                    <a href={href} onClick={this.onClick}>\n                        {formatted}\n                    </a>\n                </li>;\n        });\n\n        return (\n            <nav className={styles[\"event-days\"]}>\n                <ul>{list}</ul>\n            </nav>\n        );\n    }\n}\n\nexport default Nav;\n","import classNames from \"classnames/bind\";\nimport React from 'react';\nimport styles from './Tags.module.css';\n\nlet cx = classNames.bind(styles);\n\nconst TagList = ({tags, selectedTags, onTagSelection}) => {\n\n    const list = tags.map(({tag, color}) => {\n\n        const checked = selectedTags.includes(tag);\n        const classes = cx({\n            '-checked': checked,\n            tag: true\n        });\n\n        return (\n            <div key={tag} className={classes} style={{'--tag-color': color }}>\n                <label htmlFor={tag}><span>{tag.slice(6)}</span></label>\n                <input type=\"checkbox\" name={tag} id={tag} onChange={onTagSelection} checked={checked} />\n            </div>\n        );\n    });\n\n    return (\n        <div className={styles.tags}>\n            <form>{list}</form>\n        </div>\n    );\n};\n\nexport default TagList;\n","// @flow\n\nimport { ADD_FAVORITE, ADD_TAG, FILTER_FAVORITES, HIDE_DIALOG, RECEIVE_EVENTS, REMOVE_FAVORITE, REMOVE_TAG, SHOW_DIALOG } from \"./Actions\";\nimport type { DaysEvents, VanillaEvent } from \"./types\";\nimport { colors, headerDateFormat } from \"./constants\";\nimport { compareAsc, format, parse } from \"date-fns\";\n\nimport { combineReducers } from \"redux\";\nimport {createDate} from \"./helpers\";\n\nfunction events(state = [], { type, events }: { type: string, events: Array<VanillaEvent> }) {\n    switch (type) {\n\n        case RECEIVE_EVENTS:\n\n            // We want to split up the date events into days\n            const chunked = events.reduce((acc: Array<DaysEvents>, event: VanillaEvent) => {\n\n                event[\"Start Date & Time\"] = createDate(event[\"Start Date & Time\"]);\n\n                const day: string = format(event[\"Start Date & Time\"], headerDateFormat);\n                const found: void | DaysEvents = acc.find(chunk => chunk.day === day);\n\n                if (found) {\n                    found.events.push(event);\n                } else {\n                    acc.push({ day, events: [] });\n                }\n\n                return acc;\n\n            }, []);\n\n            return chunked.sort((a, b) => {\n                const first = parse(a.day, headerDateFormat, new Date());\n                const next = parse(b.day, headerDateFormat, new Date());\n\n                return compareAsc(first, next);\n            });\n\n        default:\n            return state;\n    }\n}\n\nfunction tags(state = [], { type, events }) {\n    switch (type) {\n        case RECEIVE_EVENTS:\n            return [...new Set(events.map(event => event['Event Type']))]\n                .sort()\n                .map((tag, index) => {\n                    return {\n                        tag,\n                        color: colors[index]\n                    }\n                });\n        default:\n            return state;\n    }\n}\n\nconst filters = {\n    tags: [],\n    onlyFavs: false\n};\nfunction filter(state = filters, { type, tag, checked = false }) {\n    switch (type) {\n\n        // @NOTE: Not sure if we need add/remove to be separate\n        case ADD_TAG:\n            return {...state, tags: [...state.tags, tag] };\n        case REMOVE_TAG:\n            return { ...state, tags: state.tags.filter(current => current !== tag) };\n        case FILTER_FAVORITES:\n            return { ...state, onlyFavs: checked };\n        default:\n            return state;\n    }\n}\n\nfunction favorites(state = [], { type, eventID }) {\n    switch (type) {\n        case ADD_FAVORITE:\n            return [...state, eventID];\n        case REMOVE_FAVORITE:\n            return state.filter(current => current !== eventID);\n        default:\n            return state;\n    }\n}\n\nconst dialogState = {\n    show: false,\n    id: ''\n};\nfunction dialog(state = dialogState, { type, id }) {\n    switch(type) {\n        case SHOW_DIALOG:\n            return { show: true, id };\n        case HIDE_DIALOG:\n            return { ...state, show: false };\n        default:\n            return state;\n    }\n}\n\nconst genconApp = combineReducers({\n    events,\n    tags,\n    favorites,\n    filter,\n    dialog\n});\n\nexport default genconApp;\n","import { applyMiddleware, compose, createStore } from \"redux\";\n\nimport { createLogger } from \"redux-logger\";\nimport genconApp from \"./Reducers\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst loggerMiddleware = createLogger();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet enhancer = composeEnhancers(applyMiddleware(\n    thunkMiddleware,\n    loggerMiddleware\n));\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunkMiddleware);\n}\n\nconst store = createStore(\n    genconApp,\n    enhancer\n);\n\nexport default store;\n","import \"./App.css\";\n\nimport React, { Component } from \"react\";\nimport {\n    addFavorite,\n    addTag,\n    fetchPosts,\n    filterFavs,\n    hideDialog,\n    removeFavorite,\n    removeTag,\n    showDialog\n} from \"./Actions\";\nimport { chosenEvent, eventDays, filteredEvents } from \"./selectors\";\n\nimport Dialog from \"./components/Dialog\";\nimport EventList from \"./components/EventList\";\nimport Nav from \"./components/Nav\";\nimport TagList from \"./components/Tags\";\nimport { connect } from \"react-redux\";\nimport store from \"./Store\";\n\nconst mapStateToProps = state => {\n\n    const { tags, favorites, filter } = state;\n\n    return {\n        tags,\n        favorites,\n        filter,\n        showDialog: state.dialog.show,\n        dialogEvent: chosenEvent(state),\n        events: filteredEvents(state),\n        days: eventDays(state)\n    };\n};\n\nclass App extends Component {\n    componentDidMount() {\n        store.dispatch(fetchPosts());\n    }\n\n    onTagSelection = ({ target: { name, checked } }) => {\n        if (checked) {\n            store.dispatch(addTag(name));\n        } else {\n            store.dispatch(removeTag(name));\n        }\n    };\n\n    onFav = ({ target: { id, checked } }) => {\n        if (checked) {\n            store.dispatch(addFavorite(id));\n        } else {\n            store.dispatch(removeFavorite(id));\n        }\n    };\n\n    onFilterFavs = ({ target: { checked } }) => {\n        store.dispatch(filterFavs(checked));\n    };\n\n    // @NOTE: Check if we can replace this with the native .showModal() API, however,\n    // will need a polyfill since support is shitty on mobile\n    onShowDialog = (id) => {\n        store.dispatch(showDialog(id));\n    }\n\n    onHideDialog = () => {\n        store.dispatch(hideDialog());\n    }\n\n    render() {\n        return (\n            <main className=\"app\">\n                <Dialog\n                    show={this.props.showDialog}\n                    event={this.props.dialogEvent}\n                    onClose={this.onHideDialog}\n                />\n                <div className=\"tag -fav\">\n                    <label htmlFor=\"only-favs\">Show Only Favorites</label>\n                    <input\n                        type=\"checkbox\"\n                        name=\"favs\"\n                        id=\"only-favs\"\n                        onChange={this.onFilterFavs}\n                    />\n                </div>\n                <TagList\n                    tags={this.props.tags}\n                    onTagSelection={this.onTagSelection}\n                    selectedTags={this.props.filter.tags}\n                />\n                <Nav days={this.props.days} />\n                <EventList\n                    events={this.props.events}\n                    onFav={this.onFav}\n                    favs={this.props.favorites}\n                    showDialog={this.onShowDialog}\n                />\n            </main>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './polyfills';\nimport './index.css';\n\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport store from \"./Store\";\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}