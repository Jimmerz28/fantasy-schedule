{"version":3,"sources":["components/Tags.module.css","components/Nav.module.css","components/EventList.module.css","Actions.js","constants.js","Reducers.js","helpers.js","Store.js","components/Dialog.js","components/EventList.js","components/Nav.js","components/Tags.js","selectors.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","tags","tag","-checked","event-days","-active","events","REQUEST_EVENTS","requestEvents","type","RECEIVE_EVENTS","fetchPosts","dispatch","fetch","then","res","json","error","console","ADD_TAG","REMOVE_TAG","ADD_FAVORITE","REMOVE_FAVORITE","FILTER_FAVORITES","colors","dateTimeFormat","dateFormat","headerDateFormat","naviDateFormat","filters","onlyFavs","Reducers","Object","redux","state","arguments","length","undefined","_ref","reduce","acc","event","date","format","parse","Date","createDate","day","esm_format","found","find","chunk","push","sort","a","b","first","next","compareAsc","_ref2","_toConsumableArray","Set","map","index","color","favorites","_ref4","eventID","concat","filter","current","_ref3","_ref3$checked","checked","_objectSpread","loggerMiddleware","redux_logger","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","redux_thunk_es","Store","components_Dialog","show","visible","open","react_default","createElement","components_EventList","onFav","favs","showDialog","list","stringFormat","daysEvents","id","includes","key","onClick","bind","htmlFor","name","onChange","replace","className","EventList_module_default","components_Nav","activeDay","hash","target","_this","setState","_this2","this","props","days","value","formatted","href","classes","classnames_default","Nav_defineProperty","Nav_module_default","react","cx","bind_default","Tags_module_default","Tags","selectedTags","onTagSelection","style","--tag-color","slice","getEvents","filteredEvents","lib","filterdResults","eventDays","App_App","currentEvent","_ref$target","removeTag","_ref2$target","removeFavorite","onFilterFavs","filterFavs","onShowDialog","src_App_0","es","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","react_dom_default","render","store","document","getElementById","URL","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.48c7100c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"Tags_tags__33cad\",\"tag\":\"Tags_tag__1DkF9\",\"-checked\":\"Tags_-checked__2JlTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event-days\":\"Nav_event-days__3gjk_\",\"-active\":\"Nav_-active__3hA8p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"events\":\"EventList_events___LJlq\"};","// See: https://redux.js.org/advanced/async-actions#actions-js-asynchronous\nexport const REQUEST_EVENTS = \"EVENTS::REQUEST\";\nfunction requestEvents() {\n    return {\n        type: REQUEST_EVENTS\n    };\n}\n\nexport const RECEIVE_EVENTS = \"EVENTS::RECIEVED\";\nfunction receiveEvents(events) {\n    return {\n        type: RECEIVE_EVENTS,\n        events\n    };\n}\n\nexport function fetchPosts() {\n    return function (dispatch) {\n        dispatch(requestEvents);\n\n        return fetch(process.env.REACT_APP_EVENTS_URL)\n            .then(res => res.json(), error => console.error(error))\n\n            .then(json => {\n                dispatch(receiveEvents(json));\n            });\n    };\n}\n\nexport const ADD_TAG = \"TAG::ADD\";\nexport function addTag(tag) {\n    return {\n        type: ADD_TAG,\n        tag\n    }\n}\n\nexport const REMOVE_TAG = \"TAG::REMOVE\";\nexport function removeTag(tag) {\n    return {\n        type: REMOVE_TAG,\n        tag\n    }\n}\n\nexport const ADD_FAVORITE = \"FAVORITE::ADD\";\nexport function addFavorite(eventID) {\n    return {\n        type: ADD_FAVORITE,\n        eventID\n    }\n}\n\nexport const REMOVE_FAVORITE = \"FAVORITE::REMOVE\";\nexport function removeFavorite(eventID) {\n    return {\n        type: REMOVE_FAVORITE,\n        eventID\n    }\n}\n\nexport const FILTER_FAVORITES = \"FAVORITES::FILTER\";\nexport function filterFavs(checked) {\n    return {\n        type: FILTER_FAVORITES,\n        checked\n    }\n}\n","// Generated via http://tools.medialab.sciences-po.fr/iwanthue/index.php\nexport const colors = [\n    \"#d7f2cc\",\n    \"#88aee1\",\n    \"#e6d3a5\",\n    \"#cec9f3\",\n    \"#b9cda1\",\n    \"#dfbbe3\",\n    \"#96bfad\",\n    \"#e8a9a5\",\n    \"#90d3e0\",\n    \"#f3d7b6\",\n    \"#a5cbeb\",\n    \"#ccb295\",\n    \"#b9aace\",\n    \"#c1e2d3\",\n    \"#dfb9be\",\n    \"#c7dfee\",\n    \"#ead9c9\",\n    \"#a9b6cc\",\n    \"#e5d1e3\"\n];\n\nexport const dateTimeFormat = \"MM/dd/yyyy hh:mm aaa\";\nexport const dateFormat = \"M/dd/yyyy\";\nexport const headerDateFormat = \"eeee, LLL d\";\nexport const naviDateFormat = \"MMM d\";\n","// @flow\n\nimport { compareAsc, format, parse } from \"date-fns\";\nimport { combineReducers } from \"redux\";\nimport { ADD_FAVORITE, ADD_TAG, FILTER_FAVORITES, RECEIVE_EVENTS, REMOVE_FAVORITE, REMOVE_TAG } from \"./Actions\";\nimport { colors, headerDateFormat } from \"./constants\";\nimport {createDate} from \"./helpers\";\nimport type { DaysEvents, VanillaEvent } from \"./types\";\n\nfunction events(state = [], { type, events }: { type: string, events: Array<VanillaEvent> }) {\n    switch (type) {\n\n        case RECEIVE_EVENTS:\n\n            // We want to split up the date events into days\n            const chunked = events.reduce((acc: Array<DaysEvents>, event: VanillaEvent) => {\n\n                event[\"Start Date & Time\"] = createDate(event[\"Start Date & Time\"]);\n\n                const day: string = format(event[\"Start Date & Time\"], headerDateFormat);\n                const found: void | DaysEvents = acc.find(chunk => chunk.day === day);\n\n                if (found) {\n                    found.events.push(event);\n                } else {\n                    acc.push({ day, events: [] });\n                }\n\n                return acc;\n\n            }, []);\n\n            return chunked.sort((a, b) => {\n                const first = parse(a.day, headerDateFormat, new Date());\n                const next = parse(b.day, headerDateFormat, new Date());\n\n                return compareAsc(first, next);\n            });\n\n        default:\n            return state;\n    }\n}\n\nfunction tags(state = [], { type, events }) {\n    switch (type) {\n        case RECEIVE_EVENTS:\n            return [...new Set(events.map(event => event['Event Type']))]\n                .sort()\n                .map((tag, index) => {\n                    return {\n                        tag,\n                        color: colors[index]\n                    }\n                });\n        default:\n            return state;\n    }\n}\n\nconst filters = {\n    tags: [],\n    onlyFavs: false\n};\nfunction filter(state = filters, { type, tag, checked = false }) {\n    switch (type) {\n\n        // @NOTE: Not sure if we need add/remove to be separate\n        case ADD_TAG:\n            return {...state, tags: [...state.tags, tag] };\n        case REMOVE_TAG:\n            return { ...state, tags: state.tags.filter(current => current !== tag) };\n        case FILTER_FAVORITES:\n            return { ...state, onlyFavs: checked };\n        default:\n            return state;\n    }\n}\n\nfunction favorites(state = [], { type, eventID }) {\n    switch (type) {\n        case ADD_FAVORITE:\n            return [...state, eventID];\n        case REMOVE_FAVORITE:\n            return state.filter(current => current !== eventID);\n        default:\n            return state;\n    }\n}\n\nconst genconApp = combineReducers({\n    events,\n    tags,\n    favorites,\n    filter\n});\n\nexport default genconApp;\n","import { format, parse } from \"date-fns\";\nimport { dateFormat, dateTimeFormat, naviDateFormat } from \"./constants\";\n\nexport function createDate(date, withTime = true) {\n    const format = withTime ? dateTimeFormat : dateFormat;\n\n    return parse(date, format, new Date());\n}\n\nexport function createDayID(date, stringFormat) {\n    return format(parse(date, stringFormat, new Date()), naviDateFormat).replace(\" \", \"-\");\n}\n","import { applyMiddleware, compose, createStore } from \"redux\";\n\nimport { createLogger } from \"redux-logger\";\nimport genconApp from \"./Reducers\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst loggerMiddleware = createLogger();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet enhancer = composeEnhancers(applyMiddleware(\n    thunkMiddleware,\n    loggerMiddleware\n));\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunkMiddleware);\n}\n\nconst store = createStore(\n    genconApp,\n    enhancer\n);\n\nexport default store;\n","import React from 'react';\n\nconst Dialog = ({show, event}) => {\n\n    const visible = {\n        open: show\n    };\n\n    return (\n        <dialog {...visible}></dialog>\n    );\n}\n\nexport default Dialog;\n","import React from 'react';\nimport { headerDateFormat } from \"../constants\";\nimport { createDayID } from \"../helpers\";\nimport styles from \"./EventList.module.css\";\n\nconst EventList = ({ events, onFav, favs, showDialog }) => {\n\n    const list = events.map(({ day, events }) => {\n\n        const daysEvents = events.map(event => {\n\n                const id = event[\"Game ID\"];\n                const checked = favs.includes(id);\n\n                return (\n                    <li key={id} onClick={ showDialog.bind(this, id) }>\n                        <p>{event[\"Title\"]}</p>\n                        <p>{event[\"Event Type\"]}</p>\n                        <label htmlFor={id}>Favorite</label>\n                        <input type=\"checkbox\" name={id} id={id}\n                            onChange={onFav} checked={checked} />\n                    </li>\n                );\n            });\n\n        return (\n            <div key={day} id={ createDayID(day, headerDateFormat) }>\n                <h2>{day}</h2>\n                <ul>{daysEvents}</ul>\n            </div>\n        );\n\n    });\n\n    return (\n        <div className={ styles.events }>\n            <ul>{list}</ul>\n        </div>\n    );\n}\n\nexport default EventList;\n","// @flow\n\nimport React, { Component } from 'react';\n\nimport type { NaviDay } from \"../types\";\nimport classNames from \"classnames\";\nimport styles from \"./Nav.module.css\";\n\ntype P = {\n    days: Array<NaviDay>\n};\n\ntype S = {\n    activeDay: string;\n};\n\nclass Nav extends Component<P, S> {\n\n    state = {\n        activeDay: ''\n    };\n\n    onClick = ({ target: { hash } }: { target: HTMLAnchorElement }) => {\n        this.setState({ activeDay: hash });\n    }\n\n    render() {\n\n        const { days } = this.props;\n\n        const list = days.map(({ value, formatted }: { value: string, formatted: string }) => {\n\n            const href = `#${formatted}`.replace(\" \", \"-\");\n\n            const classes = classNames({ [styles[\"-active\"]]: (href === this.state.activeDay) });\n\n            return <li key={value} className={classes}>\n                    <a href={href} onClick={this.onClick}>\n                        {formatted}\n                    </a>\n                </li>;\n        });\n\n        return (\n            <nav className={styles[\"event-days\"]}>\n                <ul>{list}</ul>\n            </nav>\n        );\n    }\n}\n\nexport default Nav;\n","import classNames from \"classnames/bind\";\nimport React from 'react';\nimport styles from './Tags.module.css';\n\nlet cx = classNames.bind(styles);\n\nconst TagList = ({tags, selectedTags, onTagSelection}) => {\n\n    const list = tags.map(({tag, color}) => {\n\n        const checked = selectedTags.includes(tag);\n        const classes = cx({\n            '-checked': checked,\n            tag: true\n        });\n\n        return (\n            <div key={tag} className={classes} style={{'--tag-color': color }}>\n                <label htmlFor={tag}><span>{tag.slice(6)}</span></label>\n                <input type=\"checkbox\" name={tag} id={tag} onChange={onTagSelection} checked={checked} />\n            </div>\n        );\n    });\n\n    return (\n        <div className={styles.tags}>\n            <form>{list}</form>\n        </div>\n    );\n};\n\nexport default TagList;\n","import { format, parse } from \"date-fns\";\nimport { createSelector } from \"reselect\";\nimport { headerDateFormat, naviDateFormat } from \"./constants\";\n\nconst getEvents = state => state.events;\nconst getSelectedTags = state => state.filter.tags;\nconst getFavs = state => state.favorites;\nconst isOnlyFavorites = state => state.filter.onlyFavs;\n\nexport const filteredEvents = createSelector(\n    [getSelectedTags, isOnlyFavorites, getFavs, getEvents],\n    (tags, onlyFavs, favs, events) => {\n        let filterdResults = events;\n\n        if (tags.length) {\n            filterdResults = filterdResults.map(({ day, events }) => {\n                return {\n                    day,\n                    events: events.filter(event =>\n                        tags.includes(event[\"Event Type\"])\n                    )\n                };\n            });\n        }\n\n        if (onlyFavs) {\n            filterdResults = filterdResults.map(({ day, events }) => {\n                return {\n                    day,\n                    events: events.filter(event =>\n                        favs.includes(event[\"Game ID\"])\n                    )\n                };\n            });\n        }\n\n        return filterdResults;\n    }\n);\n\nexport const eventDays = createSelector(\n    [getEvents],\n    (events) => {\n        return events.reduce((acc, event) => {\n            acc.push({\n                value: event.day,\n                formatted: format(\n                    parse(event.day, headerDateFormat, new Date()),\n                    naviDateFormat\n                )\n            });\n            return acc;\n        }, []);\n    }\n);\n","import \"./App.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    addFavorite,\n    addTag,\n    fetchPosts,\n    filterFavs,\n    removeFavorite,\n    removeTag\n} from \"./Actions\";\nimport store from \"./Store\";\nimport Dialog from \"./components/Dialog\";\nimport EventList from \"./components/EventList\";\nimport Nav from \"./components/Nav\";\nimport TagList from \"./components/Tags\";\nimport { eventDays, filteredEvents } from \"./selectors\";\n\nconst mapStateToProps = state => {\n\n    const { tags, favorites, filter } = state;\n\n    return {\n        tags,\n        favorites,\n        filter,\n        events: filteredEvents(state),\n        days: eventDays(state)\n    };\n};\n\nclass App extends Component {\n    componentDidMount() {\n        store.dispatch(fetchPosts());\n    }\n\n    state = {\n        showDialog: false,\n        currentEvent: \"\"\n    }\n\n    onTagSelection = ({ target: { name, checked } }) => {\n        if (checked) {\n            store.dispatch(addTag(name));\n        } else {\n            store.dispatch(removeTag(name));\n        }\n    };\n\n    onFav = ({ target: { id, checked } }) => {\n        if (checked) {\n            store.dispatch(addFavorite(id));\n        } else {\n            store.dispatch(removeFavorite(id));\n        }\n    };\n\n    onFilterFavs = ({ target: { checked } }) => {\n        store.dispatch(filterFavs(checked));\n    };\n\n    onShowDialog = (id) => {\n        this.setState({\n            showDialog: true,\n            currentEvent: id\n        });\n    }\n\n    render() {\n        return (\n            <main className=\"app\">\n                <Dialog show={this.state.showDialog} event={this.state.currentEvent} />\n                <div className=\"tag -fav\">\n                    <label htmlFor=\"only-favs\">Show Only Favorites</label>\n                    <input\n                        type=\"checkbox\"\n                        name=\"favs\"\n                        id=\"only-favs\"\n                        onChange={this.onFilterFavs}\n                    />\n                </div>\n                <TagList\n                    tags={this.props.tags}\n                    onTagSelection={this.onTagSelection}\n                    selectedTags={this.props.filter.tags}\n                />\n                <Nav days={this.props.days} />\n                <EventList\n                    events={this.props.events}\n                    onFav={this.onFav}\n                    favs={this.props.favorites}\n                    showDialog={ this.onShowDialog }\n                />\n            </main>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport store from \"./Store\";\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}