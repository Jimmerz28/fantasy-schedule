{"version":3,"sources":["components/Tags.module.css","components/Nav.module.css","components/EventDetail.module.css","components/Events.module.css","components/EventList.module.css","components/Event.module.css","components/Dialog.module.css","Actions.js","constants.js","helpers.js","Reducers.js","Store.js","components/Event.js","components/EventList.js","components/RelatedEvents.js","components/EventDetail.js","components/Dialog.js","components/Events.js","components/Nav.js","components/Tags.js","polyfills.js","selectors.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","tags","tag","-checked","event-days","-active","location","events","event-list","event","event-dialog","REQUEST_EVENTS","requestEvents","type","RECEIVE_EVENTS","fetchPosts","dispatch","fetch","then","res","json","error","console","ADD_TAG","REMOVE_TAG","ADD_FAVORITE","REMOVE_FAVORITE","FILTER_FAVORITES","SELECT_EVENT","colors","dateTimeFormat","eventTime","dateFormat","headerDateFormat","naviDateFormat","createDate","date","format","arguments","length","undefined","Object","parse","Date","chunkEvents","chunked","reduce","acc","day","esm_format","found","find","chunk","push","sort","a","b","first","next","compareAsc","forEach","_ref","a1","b1","filters","onlyFavs","Reducers","redux","state","_ref2","_toConsumableArray","Set","map","index","color","favorites","_ref4","eventID","concat","filter","current","_ref3","_ref3$checked","checked","_objectSpread","selectedEvent","_ref5","id","loggerMiddleware","redux_logger","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","redux_thunk_es","Store","components_Event","onClick","onFav","isFav","react_default","createElement","className","Event_module_default","bind","replace","eventStartTime","slice","htmlFor","name","onChange","components_EventList","favs","onEventClick","list","stringFormat","daysEvents","includes","key","EventList_module_default","components_RelatedEvents","relatedEvents","children","react","components_EventDetail","EventDetail_module_default","end","eventStartEndTime","components_Dialog","show","onClose","Dialog_module_default","components_Events","Events_module_default","components_Nav","activeDay","hash","target","_this","setState","_this2","this","props","days","i","value","formatted","href","classes","classnames_default","Nav_defineProperty","Nav_module_default","cx","bind_default","Tags_module_default","Tags","selectedTags","onTagSelection","style","--tag-color","polyfills","getEvents","selectors_filteredEvents","lib","filterdResults","eventDays","selectors_chosenEvent","some","singleEvent","selectors_relatedEvents","filteredEvents","chosenEvent","related","apply","selectors_toConsumableArray","App_App","_ref$target","removeTag","_ref2$target","removeFavorite","onFilterFavs","filterFavs","onShowDialog","selectEvent","eventDialog","showModal","onHideDialog","close","registerDialog","info","showDialog","dialogEvent","document","querySelector","src_App_0","es","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","react_dom_default","render","store","getElementById","URL","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4EACAA,EAAAC,SAAkBC,KAAA,mBAAAC,IAAA,kBAAAC,WAAA,4CCAlBJ,EAAAC,SAAkBI,aAAA,wBAAAC,UAAA,0CCAlBN,EAAAC,SAAkBM,SAAA,mDCAlBP,EAAAC,SAAkBO,OAAA,4CCAlBR,EAAAC,SAAkBQ,aAAA,mDCAlBT,EAAAC,SAAkBS,MAAA,0CCAlBV,EAAAC,SAAkBU,eAAA,yHCALC,SAAiB,mBAC9B,SAASC,IACL,OACIC,KAAMF,GAIP,IAAMG,EAAiB,mBAQvB,SAASC,IACZ,OAAO,SAAUC,GAGb,OAFAA,EAASJ,GAEFK,MAAM,4DACRC,KAAK,SAAAC,GAAA,OAAOA,EAAIC,QAAQ,SAAAC,GAAA,OAASC,QAAQD,MAAMA,KAE/CH,KAAK,SAAAE,GACFJ,GAbRH,KAAMC,EACNP,OAY+Ba,OAKhC,IAAMG,EAAU,WAQhB,IAAMC,EAAa,cAQnB,IAAMC,EAAe,gBAQrB,IAAMC,EAAkB,mBAQxB,IAAMC,EAAmB,oBAQzB,IAAMC,EAAe,qCCpEfC,GACT,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAiB,uBACjBC,EAAY,IACZC,EAAa,YACbC,EAAmB,cACnBC,EAAiB,8BCpBvB,SAASC,EAAWC,GAAwC,IACzDC,IADyDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACrCR,EAAiBE,EAE3C,OAAOS,OAAAC,EAAA,EAAAD,CAAML,EAAMC,EAAQ,IAAIM,MAa5B,SAASC,EAAYrC,GACxB,IAAMsC,EAAUtC,EAAOuC,OAAO,SAACC,EAAwBtC,GAET,kBAA/BA,EAAM,uBACbA,EAAM,qBAAuB0B,EAAW1B,EAAM,uBAGlD,IAAMuC,EAAcP,OAAAQ,EAAA,EAAAR,CAAOhC,EAAM,qBAAsBwB,GACjDiB,EAA2BH,EAAII,KAAK,SAAAC,GAAA,OAASA,EAAMJ,MAAQA,IAQjE,OANIE,EACAA,EAAM3C,OAAO8C,KAAK5C,GAElBsC,EAAIM,MAAOL,MAAKzC,QAASE,KAGtBsC,OAeX,OAXAF,EAAQS,KAAK,SAACC,EAAGC,GACb,IAAMC,EAAQhB,OAAAC,EAAA,EAAAD,CAAMc,EAAEP,IAAKf,EAAkB,IAAIU,MAC3Ce,EAAOjB,OAAAC,EAAA,EAAAD,CAAMe,EAAER,IAAKf,EAAkB,IAAIU,MAEhD,OAAOF,OAAAkB,EAAA,EAAAlB,CAAWgB,EAAOC,KAG7Bb,EAAQe,QAAQ,SAAAC,GAAmBA,EAAjBb,IAAiBa,EAAZtD,OACZ+C,KAAK,SAACQ,EAAIC,GAAL,OAAYtB,OAAAkB,EAAA,EAAAlB,CAAWqB,EAAG,qBAAsBC,EAAG,0BAG5DlB,oxBCjBX,IAAMmB,GACF/D,QACAgE,UAAU,GAqCd,IAQAC,EARkBzB,OAAA0B,EAAA,EAAA1B,EACdlC,OArEJ,WAA6F,IAA7E6D,EAA6E9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAAAuB,EAAAvB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAA/D3B,EAA+DgD,EAA/DhD,KAAMN,EAAyDsD,EAAzDtD,OAChC,OAAQM,GAEJ,KAAKC,EAGD,OAAO8B,EAAYrC,GAEvB,QACI,OAAO6D,IA6DfnE,KAzDJ,WAA4C,IAA9BmE,EAA8B9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAAA+B,EAAA/B,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAhB3B,EAAgBwD,EAAhBxD,KAAMN,EAAU8D,EAAV9D,OAC9B,OAAQM,GACJ,KAAKC,EACD,OAAOwD,EAAI,IAAIC,IAAIhE,EAAOiE,IAAI,SAAA/D,GAAA,OAASA,EAAM,kBACxC6C,OACAkB,IAAI,SAACtE,EAAKuE,GACP,OACIvE,MACAwE,MAAO7C,EAAO4C,MAG9B,QACI,OAAOL,IA8CfO,UAvBJ,WAAkD,IAA/BP,EAA+B9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAAAsC,EAAAtC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAjB3B,EAAiB+D,EAAjB/D,KAAMgE,EAAWD,EAAXC,QACnC,OAAQhE,GACJ,KAAKY,EACD,OAAA6C,EAAWF,GAAXU,QAAkBD,IACtB,KAAKnD,EACD,OAAO0C,EAAMW,OAAO,SAAAC,GAAA,OAAWA,IAAYH,IAC/C,QACI,OAAOT,IAiBfW,OAvCJ,WAAiE,IAAjDX,EAAiD9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzC0B,EAAyCiB,EAAA3C,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAA9B3B,EAA8BoE,EAA9BpE,KAAMX,EAAwB+E,EAAxB/E,IAAwBgF,EAAAD,EAAnBE,eAAmB,IAAAD,KAC7D,OAAQrE,GAGJ,KAAKU,EACD,OAAA6D,KAAYhB,GAAOnE,OAAUmE,EAAMnE,MAAhB6E,QAAsB5E,MAC7C,KAAKsB,EACD,OAAA4D,KAAYhB,GAAOnE,KAAMmE,EAAMnE,KAAK8E,OAAO,SAAAC,GAAA,OAAWA,IAAY9E,MACtE,KAAKyB,EACD,OAAAyD,KAAYhB,GAAOH,SAAUkB,IACjC,QACI,OAAOf,IA6BfiB,cAdJ,WAAiD,IAA1BjB,EAA0B9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,GAAkBgD,EAAAhD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAZ3B,EAAYyE,EAAZzE,KAAM0E,EAAMD,EAANC,GACvC,OAAQ1E,GACJ,KAAKe,EACD,OAAO2D,EACX,QACI,OAAOnB,cClEboB,EAAmB/C,OAAAgD,EAAA,aAAAhD,GAErBiD,GADqBC,OAAOC,sCAAwCzB,EAAA,GACxC1B,OAAA0B,EAAA,EAAA1B,CAC5BoD,EAAA,EACAL,IAIAE,EAAWjD,OAAA0B,EAAA,EAAA1B,CAAgBoD,EAAA,GAG/B,IAKAC,EALcrD,OAAA0B,EAAA,EAAA1B,CACVyB,EACAwB,sDCSJK,EAvBc,SAAAlC,GAAsC,IAAnCpD,EAAmCoD,EAAnCpD,MAAOuF,EAA4BnC,EAA5BmC,QAASC,EAAmBpC,EAAnBoC,MAAOC,EAAYrC,EAAZqC,MAE9BX,EAAK9E,EAAM,WAEjB,OACI0F,EAAA5C,EAAA6C,cAAA,MAAIC,UAAWC,EAAA/C,EAAO9C,MAAOuF,QAASA,EAAQO,YAAWhB,IACrDY,EAAA5C,EAAA6C,cAAA,SH8CL,SAAwB3F,GAG3B,OAFgBgC,OAAAQ,EAAA,EAAAR,CAAOhC,EAAM,qBAAsBsB,GAElCyE,QAAQ,MAAO,IGjDpBC,CAAehG,IACnB0F,EAAA5C,EAAA6C,cAAA,WACID,EAAA5C,EAAA6C,cAAA,SAAI3F,EAAA,OACJ0F,EAAA5C,EAAA6C,cAAA,SAAI3F,EAAM,cAAciG,MAAM,KAElCP,EAAA5C,EAAA6C,cAAA,SAAOO,QAASpB,GAAhB,YACAY,EAAA5C,EAAA6C,cAAA,SACIvF,KAAK,WACL+F,KAAMrB,EACNA,GAAIA,EACJsB,SAAUZ,EACVd,QAASe,uBC4BzBY,EAjCkB,SAAAjD,GAAkD,IAA/CtD,EAA+CsD,EAA/CtD,OAAQ0F,EAAuCpC,EAAvCoC,MAAOc,EAAgClD,EAAhCkD,KAAMC,EAA0BnD,EAA1BmD,aAEhCC,EAAO1G,EAAOiE,IAAI,SAAAH,GAAqB,IJNrBjC,EAAc8E,EIMXlE,EAAkBqB,EAAlBrB,IAEjBmE,EAFmC9C,EAAb9D,OAEFiE,IAAI,SAAA/D,GAEtB,IAAM8E,EAAK9E,EAAM,WACXyF,EAAQa,EAAKK,SAAS7B,GAG5B,OACIY,EAAA5C,EAAA6C,cAACL,GACGsB,IAAM9B,EACN9E,MAAQA,EACRyF,MAAQA,EACRF,QAAUgB,EACVf,MAAQA,MAKxB,OACIE,EAAA5C,EAAA6C,cAAA,MAAIiB,IAAKrE,EAAKuC,IJ1BEnD,EI0BeY,EJ1BDkE,EI0BMjF,EJzBrCQ,OAAAQ,EAAA,EAAAR,CAAOA,OAAAC,EAAA,EAAAD,CAAML,EAAM8E,EAAc,IAAIvE,MAAST,GAAgBsE,QAAQ,IAAK,OI0BtEL,EAAA5C,EAAA6C,cAAA,UAAKpD,GACLmD,EAAA5C,EAAA6C,cAAA,UAAKe,MAMjB,OAAOhB,EAAA5C,EAAA6C,cAAA,MAAIC,UAAWiB,EAAA/D,EAAO,eAAgB0D,ICzBjDM,EAVsB,SAAA1D,GAAwCA,EAArC2D,cAAqC,IAAtBC,EAAsB5D,EAAtB4D,SAEpC,OACIC,EAAA,yBACIA,EAAA,0CACED,ICgBdE,EAnBoB,SAAA9D,GAAqC,IAAlCpD,EAAkCoD,EAAlCpD,MAAO+G,EAA2B3D,EAA3B2D,cAE1B,OACIE,EAAA,qBAAKrB,UAAWuB,EAAArE,EAAO,iBACnBmE,EAAA,wBAAKjH,EAAA,OACLiH,EAAA,uBNDL,SAA2BjH,GAC9B,IAAMoH,EAAM1F,EAAW1B,EAAM,oBAC7B,SAAAqE,OAAUrC,OAAAQ,EAAA,EAAAR,CAAOhC,EAAM,qBAAsB,wBAA7C,OAAAqE,OAA0ErC,OAAAQ,EAAA,EAAAR,CAAOoF,EAAK,aMD1EC,CAAkBrH,IACtBiH,EAAA,mBAAGrB,UAAWuB,EAAArE,EAAA,UACVmE,EAAA,0BAAOjH,EAAA,UACPiH,EAAA,0BAAOjH,EAAM,cACbiH,EAAA,0BAAOjH,EAAM,kBAEjBiH,EAAA,uBAAIjH,EAAM,sBACViH,EAAA,uBAAIjH,EAAM,qBACViH,EAAA,uBAAIjH,EAAM,cAAciG,MAAM,IAC7Bc,ICCbO,EAbe,SAAAlE,GAAoDA,EAAjDmE,KAAiD,IAA3CvH,EAA2CoD,EAA3CpD,MAAOwH,EAAoCpE,EAApCoE,QAAST,EAA2B3D,EAA3B2D,cAEpC,OACIE,EAAA,wBAAQrB,UAAY6B,EAAA3E,EAAO,iBACvBmE,EAAA,6BACIA,EAAA,wBAAQ7G,KAAK,SAASmF,QAASiC,GAA/B,SACExH,GACEiH,EAAA,cAACC,GAAYlH,MAAOA,EAAO+G,cAAeA,yBCL9DW,GARe,SAAAtE,GAAyB,IAAtB4D,EAAsB5D,EAAtB4D,SACd,OACIC,EAAA,qBAAKrB,UAAW+B,GAAA7E,EAAOhD,QAClBkH,qzBCyCbY,yRApCIjE,OACIkE,UAAW,MAGftC,QAAU,SAAAnC,GAAyD,IAA5C0E,EAA4C1E,EAAtD2E,OAAUD,KACnBE,EAAKC,UAAWJ,UAAWC,iEAGtB,IAAAI,EAAAC,KAIC3B,EAFW2B,KAAKC,MAAdC,KAEUtE,IAAI,SAAAH,EAA6D0E,GAAM,IAAhEC,EAAgE3E,EAAhE2E,MAAOC,EAAyD5E,EAAzD4E,UAEtBC,EAAO,IAAApE,OAAImE,GAAYzC,QAAQ,IAAK,KAGpC2C,EAAUC,2HAAAC,IACXC,GAAA/F,EAAO,WAAuC,KAAzBoF,EAAKvE,MAAMkE,WAA0B,IAANS,GAAaJ,EAAKvE,MAAMkE,YAAcY,IAG/F,OAAO/C,EAAA5C,EAAA6C,cAAA,MAAIiB,IAAK2B,EAAO3C,UAAW8C,GAC1BhD,EAAA5C,EAAA6C,cAAA,KAAG8C,KAAMA,EAAMlD,QAAS2C,EAAK3C,SACxBiD,MAKjB,OACI9C,EAAA5C,EAAA6C,cAAA,OAAKC,UAAWiD,GAAA/F,EAAO,eACnB4C,EAAA5C,EAAA6C,cAAA,UAAKa,oNAhCHS,EAAA,mDCZd6B,GAAKC,GAAAjG,EAAWgD,KAAKkD,GAAAlG,GA2BzBmG,GAzBgB,SAAA7F,GAA0C,IAAxC5D,EAAwC4D,EAAxC5D,KAAM0J,EAAkC9F,EAAlC8F,aAAcC,EAAoB/F,EAApB+F,eAE5B3C,EAAOhH,EAAKuE,IAAI,SAAAH,GAAkB,IAAhBnE,EAAgBmE,EAAhBnE,IAAKwE,EAAWL,EAAXK,MAEnBS,EAAUwE,EAAavC,SAASlH,GAChCiJ,EAAUI,IACZpJ,WAAYgF,EACZjF,KAAK,IAGT,OACIiG,EAAA5C,EAAA6C,cAAA,OAAKiB,IAAKnH,EAAKmG,UAAW8C,EAASU,OAAQC,cAAepF,IACtDyB,EAAA5C,EAAA6C,cAAA,SAAOO,QAASzG,GAAKiG,EAAA5C,EAAA6C,cAAA,YAAOlG,EAAIwG,MAAM,KACtCP,EAAA5C,EAAA6C,cAAA,SAAOvF,KAAK,WAAW+F,KAAM1G,EAAKqF,GAAIrF,EAAK2G,SAAU+C,EAAgBzE,QAASA,OAK1F,OACIgB,EAAA5C,EAAA6C,cAAA,OAAKC,UAAWoD,GAAAlG,EAAOtD,MACnBkG,EAAA5C,EAAA6C,cAAA,YAAOa,KCxBnB8C,uWCOA,IAAMC,GAAY,SAAA5F,GAAA,OAASA,EAAM7D,QAMpB0J,GAAiBxH,OAAAyH,GAAA,eAAAzH,EALN,SAAA2B,GAAA,OAASA,EAAMW,OAAO9E,MAEtB,SAAAmE,GAAA,OAASA,EAAMW,OAAOd,UAD9B,SAAAG,GAAA,OAASA,EAAMO,WAKiBqF,IAC5C,SAAC/J,EAAMgE,EAAU8C,EAAMxG,GACnB,IAAI4J,EAAiB5J,EAwBrB,OAtBIN,EAAKsC,SACL4H,EAAiBA,EAAe3F,IAAI,SAAAX,GAChC,OACIb,IAFiDa,EAAlBb,IAG/BzC,OAHiDsD,EAAbtD,OAGrBwE,OAAO,SAAAtE,GAAA,OAClBR,EAAKmH,SAAS3G,EAAM,qBAMhCwD,IACAkG,EAAiBA,EAAe3F,IAAI,SAAAH,GAChC,OACIrB,IAFiDqB,EAAlBrB,IAG/BzC,OAHiD8D,EAAb9D,OAGrBwE,OAAO,SAAAtE,GAAA,OAClBsG,EAAKK,SAAS3G,EAAM,kBAM7B0J,IAIFC,GAAY3H,OAAAyH,GAAA,eAAAzH,EACpBuH,IACD,SAACzJ,GACG,OAAOA,EAAOuC,OAAO,SAACC,EAAKtC,GAQvB,OAPAsC,EAAIM,MACA2F,MAAOvI,EAAMuC,IACbiG,UAAWxG,OAAAQ,EAAA,EAAAR,CACPA,OAAAC,EAAA,EAAAD,CAAMhC,EAAMuC,IAAKf,EAAkB,IAAIU,MACvCT,KAGDa,SAKNsH,GAAc5H,OAAAyH,GAAA,eAAAzH,EACtBwH,GAlDmB,SAAA7F,GAAA,OAASA,EAAMiB,gBAmDnC,SAAC9E,EAA2BsE,GACxB,IAAIQ,EAAgB,KAQpB,OANA9E,EAAO+J,KAAK,SAAArF,GAAqBA,EAAlBjC,IAAkB,IAAbzC,EAAa0E,EAAb1E,OAGhB,OAFA8E,EAAgB9E,EAAO4C,KAAK,SAACoH,GAAD,OAA+BA,EAAY,aAAe1F,MAKnFQ,IAKFmF,GAAgB/H,OAAAyH,GAAA,eAAAzH,EACxBwH,GAAgBI,IACjB,SAACI,EAAmCC,GAEhC,OAAKA,EAYE9H,EARU6H,EAAe3H,OAAO,SAACC,EAAD6B,GAA0BA,EAAlB5B,IAAkB,IACvD2H,EADuD/F,EAAbrE,OACzBwE,OAAO,SAAAtE,GAAA,OAC1BA,EAAA,QAAmBiK,EAAA,OAClBjK,EAAM,aAAeiK,EAAY,aAEtC,OADA3H,EAAIM,KAAJuH,MAAA7H,EAAA8H,GAAYF,IACL5H,kxBCpEnB,IAeM+H,yRAaFlB,eAAiB,SAAA/F,GAAmC,IAAAkH,EAAAlH,EAAhC2E,OAAU5B,EAAsBmE,EAAtBnE,KAAsBmE,EAAhB5F,QAE5BW,EAAM9E,UfrBVH,KAAMU,EACNrB,IeoB0B0G,IAEtBd,EAAM9E,SfjBX,SAAmBd,GACtB,OACIW,KAAMW,EACNtB,OecmB8K,CAAUpE,OAIjCX,MAAQ,SAAA5B,GAAiC,IAAA4G,EAAA5G,EAA9BmE,OAAUjD,EAAoB0F,EAApB1F,GAAoB0F,EAAhB9F,QAEjBW,EAAM9E,UfbVH,KAAMY,EACNoD,QeY+BU,IAE3BO,EAAM9E,SfTX,SAAwB6D,GAC3B,OACIhE,KAAMa,EACNmD,WeMmBqG,CAAe3F,OAItC4F,aAAe,SAAAlG,GAA6B,IAAhBE,EAAgBF,EAA1BuD,OAAUrD,QACxBW,EAAM9E,SfNP,SAAoBmE,GACvB,OACItE,KAAMc,EACNwD,WeGeiG,CAAWjG,OAK9BkG,aAAe,SAAC9F,GACZO,EAAM9E,SfJP,SAAqBuE,GACxB,OACI1E,KAAMe,EACN2D,MeCe+F,CAAY/F,IAC3BkD,EAAK8C,YAAYC,eAGrBC,aAAe,WACXhD,EAAK8C,YAAYG,gFAvCjB5F,EAAM9E,SAASD,KAEfgJ,GAAe4B,eAAe/C,KAAK2C,8CA0CnC,IAAM/D,EAAgBoB,KAAKC,MAAMrB,cAAcjF,OAAS,GACpD4D,EAAA5C,EAAA6C,cAACmB,EAAD,KACIpB,EAAA5C,EAAA6C,cAACU,GACGvG,OAASqI,KAAKC,MAAMrB,cACpBvB,MAAQ2C,KAAK3C,MACbe,aAAe,kBAAM1F,QAAQsK,KAAK,YAClC7E,KAAO6B,KAAKC,MAAMlE,aAK9B,OACIwB,EAAA5C,EAAA6C,cAAA,WACID,EAAA5C,EAAA6C,cAAC2B,GACGC,KAAMY,KAAKC,MAAMgD,WACjBpL,MAAOmI,KAAKC,MAAMiD,YAClBtE,cAAeA,EACfS,QAASW,KAAK6C,eAElBtF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,OACZF,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,YACXF,EAAA5C,EAAA6C,cAAA,SAAOO,QAAQ,aAAf,uBACAR,EAAA5C,EAAA6C,cAAA,SACIvF,KAAK,WACL+F,KAAK,OACLrB,GAAG,YACHsB,SAAU+B,KAAKuC,gBAGvBhF,EAAA5C,EAAA6C,cAACsD,IACGzJ,KAAM2I,KAAKC,MAAM5I,KACjB2J,eAAgBhB,KAAKgB,eACrBD,aAAcf,KAAKC,MAAM9D,OAAO9E,OAEpCkG,EAAA5C,EAAA6C,cAACiC,IAAIS,KAAMF,KAAKC,MAAMC,OACtB3C,EAAA5C,EAAA6C,cAAC+B,GAAD,KACIhC,EAAA5C,EAAA6C,cAACU,GACGvG,OAAQqI,KAAKC,MAAMtI,OACnB0F,MAAO2C,KAAK3C,MACZc,KAAM6B,KAAKC,MAAMlE,UACjBqC,aAAc4B,KAAKyC,sDA5EvC,OAFoBU,SAASC,cAAc,0NARjCtE,EAAA,WA+FlBuE,GAAexJ,OAAAyJ,EAAA,EAAAzJ,CA9GS,SAAA2B,GAIpB,OACInE,KAHgCmE,EAA5BnE,KAIJ0E,UAJgCP,EAAtBO,UAKVI,OALgCX,EAAXW,OAMrB+G,YAAazB,GAAYjG,GACzB7D,OAAQ0J,GAAe7F,GACvBoD,cAAegD,GAAcpG,GAC7B0E,KAAMsB,GAAUhG,KAqGpB,KAFJ,CAGE0G,IC9HIqB,GAAcC,QACW,cAA7BzG,OAAOrF,SAAS+L,UAEe,UAA7B1G,OAAOrF,SAAS+L,UAEhB1G,OAAOrF,SAAS+L,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTtL,KAAK,SAAA0L,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB1I,QACfqI,UAAUC,cAAcO,WAK1B3L,QAAQ4L,IAAI,6CAKZ5L,QAAQ4L,IAAI,2CAMrBC,MAAM,SAAA9L,GACLC,QAAQD,MAAM,4CAA6CA,KCrEjE+L,EAAA7J,EAAS8J,OACLlH,EAAA5C,EAAA6C,cAAC8F,EAAA,GAASoB,MAAQxH,GACdK,EAAA5C,EAAA6C,cAAC6F,GAAD,OAEJF,SAASwB,eAAe,SDMb,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAI,oBAAwB7H,OAAOrF,UAC3CmN,SAAW9H,OAAOrF,SAASmN,OAIvC,OAGF9H,OAAO+H,iBAAiB,OAAQ,WAC9B,IAAMlB,YAAW,oBAAX,sBAEFL,IAiDV,SAAiCK,GAE/BvL,MAAMuL,GACHtL,KAAK,SAAAyM,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CtB,UAAUC,cAAcsB,MAAM9M,KAAK,SAAA0L,GACjCA,EAAaqB,aAAa/M,KAAK,WAC7ByE,OAAOrF,SAAS4N,aAKpB3B,GAAgBC,KAGnBW,MAAM,WACL7L,QAAQ4L,IACN,mEArEAiB,CAAwB3B,GAIxBC,UAAUC,cAAcsB,MAAM9M,KAAK,WACjCI,QAAQ4L,IACN,+GAMJX,GAAgBC,MC/BxBG","file":"static/js/main.b9d75d5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"Tags_tags__MTuyM\",\"tag\":\"Tags_tag__18479\",\"-checked\":\"Tags_-checked__3xFnW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event-days\":\"Nav_event-days__3CjiF\",\"-active\":\"Nav_-active__2TOg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"location\":\"EventDetail_location__3ctwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"events\":\"Events_events__2mNVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event-list\":\"EventList_event-list__20Q4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event\":\"Event_event__3jjBe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event-dialog\":\"Dialog_event-dialog__2HWFr\"};","// See: https://redux.js.org/advanced/async-actions#actions-js-asynchronous\nexport const REQUEST_EVENTS = \"EVENTS::REQUEST\";\nfunction requestEvents() {\n    return {\n        type: REQUEST_EVENTS\n    };\n}\n\nexport const RECEIVE_EVENTS = \"EVENTS::RECIEVED\";\nfunction receiveEvents(events) {\n    return {\n        type: RECEIVE_EVENTS,\n        events\n    };\n}\n\nexport function fetchPosts() {\n    return function (dispatch) {\n        dispatch(requestEvents);\n\n        return fetch(process.env.REACT_APP_EVENTS_URL)\n            .then(res => res.json(), error => console.error(error))\n\n            .then(json => {\n                dispatch(receiveEvents(json));\n            });\n    };\n}\n\nexport const ADD_TAG = \"TAG::ADD\";\nexport function addTag(tag) {\n    return {\n        type: ADD_TAG,\n        tag\n    }\n}\n\nexport const REMOVE_TAG = \"TAG::REMOVE\";\nexport function removeTag(tag) {\n    return {\n        type: REMOVE_TAG,\n        tag\n    }\n}\n\nexport const ADD_FAVORITE = \"FAVORITE::ADD\";\nexport function addFavorite(eventID) {\n    return {\n        type: ADD_FAVORITE,\n        eventID\n    }\n}\n\nexport const REMOVE_FAVORITE = \"FAVORITE::REMOVE\";\nexport function removeFavorite(eventID) {\n    return {\n        type: REMOVE_FAVORITE,\n        eventID\n    }\n}\n\nexport const FILTER_FAVORITES = \"FAVORITES::FILTER\";\nexport function filterFavs(checked) {\n    return {\n        type: FILTER_FAVORITES,\n        checked\n    }\n}\n\nexport const SELECT_EVENT = \"EVENT::SELECTED\";\nexport function selectEvent(id) {\n    return {\n        type: SELECT_EVENT,\n        id\n    }\n}\n","// Generated via http://tools.medialab.sciences-po.fr/iwanthue/index.php\nexport const colors = [\n    \"#d7f2cc\",\n    \"#88aee1\",\n    \"#e6d3a5\",\n    \"#cec9f3\",\n    \"#b9cda1\",\n    \"#dfbbe3\",\n    \"#96bfad\",\n    \"#e8a9a5\",\n    \"#90d3e0\",\n    \"#f3d7b6\",\n    \"#a5cbeb\",\n    \"#ccb295\",\n    \"#b9aace\",\n    \"#c1e2d3\",\n    \"#dfb9be\",\n    \"#c7dfee\",\n    \"#ead9c9\",\n    \"#a9b6cc\",\n    \"#e5d1e3\"\n];\n\nexport const dateTimeFormat = \"MM/dd/yyyy hh:mm aaa\";\nexport const eventTime = \"p\";\nexport const dateFormat = \"M/dd/yyyy\";\nexport const headerDateFormat = \"eeee, LLL d\";\nexport const naviDateFormat = \"MMM d\";\n","// @flow\n\nimport { compareAsc, format, parse } from \"date-fns\";\n\nimport { dateFormat, dateTimeFormat, eventTime, headerDateFormat, naviDateFormat } from \"./constants\";\nimport type { DaysEvents, VanillaEvent } from './types';\n\nexport function createDate(date: string, withTime: boolean = true) {\n    const format = withTime ? dateTimeFormat : dateFormat;\n\n    return parse(date, format, new Date());\n}\n\nexport function createDayID(date: string, stringFormat: string) {\n    return format(parse(date, stringFormat, new Date()), naviDateFormat).replace(\" \", \"-\");\n}\n\n// @TODO: This will need to be more robust since some events are overnight\nexport function eventStartEndTime(event: VanillaEvent) {\n    const end = createDate(event[\"End Date & Time\"]);\n    return `${format(event[\"Start Date & Time\"], \"EEE. MMM d, h:mm aaa\")} - ${format(end, \"h:mm aaa\")}`;\n}\n\nexport function chunkEvents(events: Array<VanillaEvent>) {\n    const chunked = events.reduce((acc: Array<DaysEvents>, event: VanillaEvent) => {\n\n        if (typeof event[\"Start Date & Time\"] === \"string\") {\n            event[\"Start Date & Time\"] = createDate(event[\"Start Date & Time\"]);\n        }\n\n        const day: string = format(event[\"Start Date & Time\"], headerDateFormat);\n        const found: void | DaysEvents = acc.find(chunk => chunk.day === day);\n\n        if (found) {\n            found.events.push(event);\n        } else {\n            acc.push({ day, events: [event] });\n        }\n\n        return acc;\n\n    }, []);\n\n    chunked.sort((a, b) => {\n        const first = parse(a.day, headerDateFormat, new Date());\n        const next = parse(b.day, headerDateFormat, new Date());\n\n        return compareAsc(first, next);\n    });\n\n    chunked.forEach(({day, events}) => {\n        events.sort((a1, b1) => compareAsc(a1[\"Start Date & Time\"], b1[\"Start Date & Time\"]));\n    });\n\n    return chunked;\n}\n\nexport function eventStartTime(event: VanillaEvent) {\n    let startTime = format(event[\"Start Date & Time\"], eventTime);\n\n    return startTime.replace(\":00\", \"\");\n}\n","// @flow\n\nimport { combineReducers } from \"redux\";\nimport { ADD_FAVORITE, ADD_TAG, FILTER_FAVORITES, RECEIVE_EVENTS, REMOVE_FAVORITE, REMOVE_TAG, SELECT_EVENT } from \"./Actions\";\nimport { colors } from \"./constants\";\nimport { chunkEvents } from \"./helpers\";\nimport type { VanillaEvent } from \"./types\";\n\nfunction events(state = [], { type, events }: { type: string, events: Array<VanillaEvent> }) {\n    switch (type) {\n\n        case RECEIVE_EVENTS:\n\n            // We want to split up the date events into days\n            return chunkEvents(events);\n\n        default:\n            return state;\n    }\n}\n\nfunction tags(state = [], { type, events }) {\n    switch (type) {\n        case RECEIVE_EVENTS:\n            return [...new Set(events.map(event => event['Event Type']))]\n                .sort()\n                .map((tag, index) => {\n                    return {\n                        tag,\n                        color: colors[index]\n                    }\n                });\n        default:\n            return state;\n    }\n}\n\nconst filters = {\n    tags: [],\n    onlyFavs: false\n};\nfunction filter(state = filters, { type, tag, checked = false }) {\n    switch (type) {\n\n        // @NOTE: Not sure if we need add/remove to be separate\n        case ADD_TAG:\n            return { ...state, tags: [...state.tags, tag] };\n        case REMOVE_TAG:\n            return { ...state, tags: state.tags.filter(current => current !== tag) };\n        case FILTER_FAVORITES:\n            return { ...state, onlyFavs: checked };\n        default:\n            return state;\n    }\n}\n\nfunction favorites(state = [], { type, eventID }) {\n    switch (type) {\n        case ADD_FAVORITE:\n            return [...state, eventID];\n        case REMOVE_FAVORITE:\n            return state.filter(current => current !== eventID);\n        default:\n            return state;\n    }\n}\n\nfunction selectedEvent(state = '', { type, id }) {\n    switch (type) {\n        case SELECT_EVENT:\n            return id;\n        default:\n            return state;\n    }\n}\n\nconst genconApp = combineReducers({\n    events,\n    tags,\n    favorites,\n    filter,\n    selectedEvent\n});\n\nexport default genconApp;\n","import { applyMiddleware, compose, createStore } from \"redux\";\n\nimport { createLogger } from \"redux-logger\";\nimport genconApp from \"./Reducers\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst loggerMiddleware = createLogger();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet enhancer = composeEnhancers(applyMiddleware(\n    thunkMiddleware,\n    loggerMiddleware\n));\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunkMiddleware);\n}\n\nconst store = createStore(\n    genconApp,\n    enhancer\n);\n\nexport default store;\n","import React from \"react\";\n\nimport { eventStartTime } from \"../helpers\";\nimport styles from \"./Event.module.css\";\n\nconst Event = ({ event, onClick, onFav, isFav }) => {\n\n    const id = event[\"Game ID\"];\n\n    return (\n        <li className={styles.event} onClick={onClick.bind(this, id)}>\n            <p>{eventStartTime(event)}</p>\n            <div>\n                <p>{event[\"Title\"]}</p>\n                <p>{event[\"Event Type\"].slice(6)}</p>\n            </div>\n            <label htmlFor={id}>Favorite</label>\n            <input\n                type=\"checkbox\"\n                name={id}\n                id={id}\n                onChange={onFav}\n                checked={isFav}\n            />\n        </li>\n    );\n}\n\nexport default Event;\n","// @flow\n\nimport React from \"react\";\n\nimport { headerDateFormat } from \"../constants\";\nimport { createDayID } from \"../helpers\";\nimport type { DaysEvents } from \"../types\";\nimport Event from \"./Event\";\nimport styles from \"./EventList.module.css\";\n\ntype Props = {\n    events: Array<DaysEvents>,\n    onFav: Function,\n    favs: Array<string>,\n    onEventClick: Function\n}\n\nconst EventList = ({ events, onFav, favs, onEventClick }: Props) => {\n\n    const list = events.map(({ day, events }) => {\n\n        const daysEvents = events.map(event => {\n\n                const id = event[\"Game ID\"];\n                const isFav = favs.includes(id);\n\n                // @TODO: Don't trigger the dialog if the favorite input is clicked\n                return (\n                    <Event\n                        key={ id }\n                        event={ event }\n                        isFav={ isFav }\n                        onClick={ onEventClick }\n                        onFav={ onFav }\n                    />\n                );\n            });\n\n        return (\n            <li key={day} id={ createDayID(day, headerDateFormat) }>\n                <h2>{day}</h2>\n                <ul>{daysEvents}</ul>\n            </li>\n        );\n\n    });\n\n    return <ul className={styles[\"event-list\"]}>{list}</ul>;\n}\n\nexport default EventList;\n","// @flow\n\nimport * as React from 'react';\n\nimport type { VanillaEvent } from \"../types\";\nimport EventList from \"./EventList\";\n\ntype Props = {\n    relatedEvents: Array<VanillaEvent>,\n    children: React.Element<typeof EventList>\n}\n\nconst RelatedEvents = ({ relatedEvents, children }: Props) => {\n\n    return (\n        <div>\n            <h2>Related Events</h2>\n            { children }\n        </div>\n    );\n}\n\nexport default RelatedEvents;\n","// @flow\n\nimport * as React from \"react\";\n\nimport { eventStartEndTime } from '../helpers';\nimport type { VanillaEvent } from '../types';\nimport styles from \"./EventDetail.module.css\";\nimport RelatedEvents from \"./RelatedEvents\";\n\ntype Props = {\n    event: VanillaEvent,\n    relatedEvents: React.Element<typeof RelatedEvents>\n};\n\nconst EventDetail = ({ event, relatedEvents }: Props) => {\n\n    return (\n        <div className={styles[\"event-detail\"]}>\n            <h1>{event[\"Title\"]}</h1>\n            <p>{eventStartEndTime(event)}</p>\n            <p className={styles[\"location\"]}>\n                <span>{event[\"Location\"]}</span>\n                <span>{event[\"Room Name\"]}</span>\n                <span>{event[\"Table Number\"]}</span>\n            </p>\n            <p>{event[\"Short Description\"]}</p>\n            <p>{event[\"Long Description\"]}</p>\n            <p>{event[\"Event Type\"].slice(6)}</p>\n            {relatedEvents}\n        </div>\n    );\n}\n\nexport default EventDetail;\n","// @flow\n\nimport * as React from 'react';\n\nimport type { VanillaEvent } from '../types';\nimport styles from './Dialog.module.css';\nimport EventDetail from './EventDetail';\nimport EventList from \"./EventList\";\n\ntype Props = {\n    show: boolean,\n    event: VanillaEvent,\n    onClose: Function,\n    relatedEvents: React.Element<typeof EventList>\n};\n\nconst Dialog = ({ show, event, onClose, relatedEvents }: Props) => {\n\n    return (\n        <dialog className={ styles[\"event-dialog\"] }>\n            <section>\n                <button type=\"button\" onClick={onClose}>Close</button>\n                { event  &&\n                    <EventDetail event={event} relatedEvents={relatedEvents}/> }\n            </section>\n        </dialog>\n    );\n}\n\nexport default Dialog;\n","// @flow\n\nimport * as React from \"react\";\n\nimport styles from \"./Events.module.css\";\n\ntype Props = {\n    children: React.Element<typeof EventList>\n}\n\nconst Events = ({ children }: Props) => {\n    return (\n        <div className={styles.events}>\n            {children}\n        </div>\n    );\n}\n\nexport default Events;\n","// @flow\n\nimport classNames from \"classnames\";\nimport React, { Component } from 'react';\n\nimport type { NaviDay } from \"../types\";\nimport styles from \"./Nav.module.css\";\n\ntype P = {\n    days: Array<NaviDay>\n};\n\ntype S = {\n    activeDay: string;\n};\n\nclass Nav extends Component<P, S> {\n\n    state = {\n        activeDay: ''\n    };\n\n    onClick = ({ target: { hash } }: { target: HTMLAnchorElement }) => {\n        this.setState({ activeDay: hash });\n    }\n\n    render() {\n\n        const { days } = this.props;\n\n        const list = days.map(({ value, formatted }: { value: string, formatted: string }, i) => {\n\n            const href = `#${formatted}`.replace(\" \", \"-\");\n\n            // If no date is chosen mark the first as \"active\"\n            const classes = classNames({\n                [styles[\"-active\"]]: (this.state.activeDay === '' && i === 0) || (this.state.activeDay === href)\n            });\n\n            return <li key={value} className={classes}>\n                    <a href={href} onClick={this.onClick}>\n                        {formatted}\n                    </a>\n                </li>;\n        });\n\n        return (\n            <nav className={styles[\"event-days\"]}>\n                <ul>{list}</ul>\n            </nav>\n        );\n    }\n}\n\nexport default Nav;\n","import classNames from \"classnames/bind\";\nimport React from 'react';\nimport styles from './Tags.module.css';\n\nlet cx = classNames.bind(styles);\n\nconst TagList = ({tags, selectedTags, onTagSelection}) => {\n\n    const list = tags.map(({tag, color}) => {\n\n        const checked = selectedTags.includes(tag);\n        const classes = cx({\n            '-checked': checked,\n            tag: true\n        });\n\n        return (\n            <div key={tag} className={classes} style={{'--tag-color': color }}>\n                <label htmlFor={tag}><span>{tag.slice(6)}</span></label>\n                <input type=\"checkbox\" name={tag} id={tag} onChange={onTagSelection} checked={checked} />\n            </div>\n        );\n    });\n\n    return (\n        <div className={styles.tags}>\n            <form>{list}</form>\n        </div>\n    );\n};\n\nexport default TagList;\n","import * as dialogPolyfill from '../node_modules/dialog-polyfill/dialog-polyfill.js';\n\nexport default dialogPolyfill;\n","// @flow\n\nimport { format, parse } from \"date-fns\";\nimport { createSelector } from \"reselect\";\n\nimport { headerDateFormat, naviDateFormat } from \"./constants\";\nimport { chunkEvents } from \"./helpers\";\nimport type { DaysEvents, VanillaEvent } from \"./types\";\n\nconst getEvents = state => state.events;\nconst getSelectedTags = state => state.filter.tags;\nconst getFavs = state => state.favorites;\nconst isOnlyFavorites = state => state.filter.onlyFavs;\nconst selectedEventID = state => state.selectedEvent;\n\nexport const filteredEvents = createSelector(\n    [getSelectedTags, isOnlyFavorites, getFavs, getEvents],\n    (tags, onlyFavs, favs, events) => {\n        let filterdResults = events;\n\n        if (tags.length) {\n            filterdResults = filterdResults.map(({ day, events }) => {\n                return {\n                    day,\n                    events: events.filter(event =>\n                        tags.includes(event[\"Event Type\"])\n                    )\n                };\n            });\n        }\n\n        if (onlyFavs) {\n            filterdResults = filterdResults.map(({ day, events }) => {\n                return {\n                    day,\n                    events: events.filter(event =>\n                        favs.includes(event[\"Game ID\"])\n                    )\n                };\n            });\n        }\n\n        return filterdResults;\n    }\n);\n\nexport const eventDays = createSelector(\n    [getEvents],\n    (events) => {\n        return events.reduce((acc, event) => {\n            acc.push({\n                value: event.day,\n                formatted: format(\n                    parse(event.day, headerDateFormat, new Date()),\n                    naviDateFormat\n                )\n            });\n            return acc;\n        }, []);\n    }\n);\n\nexport const chosenEvent = createSelector(\n    [filteredEvents, selectedEventID],\n    (events: Array<DaysEvents>, eventID: string) => {\n        let selectedEvent = null;\n\n        events.some(({ day, events }) => {\n            selectedEvent = events.find((singleEvent: VanillaEvent) => singleEvent[\"Game ID\"] === eventID)\n\n            return selectedEvent;\n        });\n\n        return selectedEvent;\n    }\n);\n\n\nexport const relatedEvents = createSelector(\n    [filteredEvents, chosenEvent],\n    (filteredEvents: Array<DaysEvents>, chosenEvent: VanillaEvent) => {\n\n        if (!chosenEvent) {\n            return [];\n        }\n\n        const flatList = filteredEvents.reduce((acc, { day, events }) => {\n            const related = events.filter(event => (\n                event[\"Title\"] === chosenEvent[\"Title\"]) &&\n                (event[\"Game ID\"] !== chosenEvent[\"Game ID\"]));\n            acc.push(...related);\n            return acc;\n        }, []);\n\n        return chunkEvents(flatList);\n    }\n);\n","import \"./App.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    addFavorite,\n    addTag,\n    fetchPosts,\n    filterFavs,\n    removeFavorite,\n    removeTag,\n    selectEvent\n} from \"./Actions\";\nimport store from \"./Store\";\nimport Dialog from \"./components/Dialog\";\nimport Events from \"./components/Events\";\nimport EventList from \"./components/EventList\";\nimport Nav from \"./components/Nav\";\nimport RelatedEvents from \"./components/RelatedEvents\";\nimport TagList from \"./components/Tags\";\nimport dialogPolyfill from './polyfills';\nimport { chosenEvent, eventDays, filteredEvents, relatedEvents } from \"./selectors\";\n\nconst mapStateToProps = state => {\n\n    const { tags, favorites, filter } = state;\n\n    return {\n        tags,\n        favorites,\n        filter,\n        dialogEvent: chosenEvent(state),\n        events: filteredEvents(state),\n        relatedEvents: relatedEvents(state),\n        days: eventDays(state)\n    };\n};\n\nclass App extends Component {\n    componentDidMount() {\n        store.dispatch(fetchPosts());\n\n        dialogPolyfill.registerDialog(this.eventDialog);\n    }\n\n    get eventDialog(): HTMLDialogElement {\n        const eventDialog = document.querySelector('dialog');\n\n        return eventDialog;\n    }\n\n    onTagSelection = ({ target: { name, checked } }) => {\n        if (checked) {\n            store.dispatch(addTag(name));\n        } else {\n            store.dispatch(removeTag(name));\n        }\n    };\n\n    onFav = ({ target: { id, checked } }) => {\n        if (checked) {\n            store.dispatch(addFavorite(id));\n        } else {\n            store.dispatch(removeFavorite(id));\n        }\n    };\n\n    onFilterFavs = ({ target: { checked } }) => {\n        store.dispatch(filterFavs(checked));\n    };\n\n    // @NOTE: Check if we can replace this with the native .showModal() API, however,\n    // will need a polyfill since support is shitty on mobile\n    onShowDialog = (id) => {\n        store.dispatch(selectEvent(id));\n        this.eventDialog.showModal();\n    }\n\n    onHideDialog = () => {\n        this.eventDialog.close();\n    }\n\n    render() {\n\n        const relatedEvents = this.props.relatedEvents.length > 0 && (\n            <RelatedEvents>\n                <EventList\n                    events={ this.props.relatedEvents }\n                    onFav={ this.onFav }\n                    onEventClick={ () => console.info(\"clicked\") }\n                    favs={ this.props.favorites }\n                />\n            </RelatedEvents>\n        );\n\n        return (\n            <div>\n                <Dialog\n                    show={this.props.showDialog}\n                    event={this.props.dialogEvent}\n                    relatedEvents={relatedEvents}\n                    onClose={this.onHideDialog}\n                />\n                <main className=\"app\">\n                    <div className=\"tag -fav\">\n                        <label htmlFor=\"only-favs\">Show Only Favorites</label>\n                        <input\n                            type=\"checkbox\"\n                            name=\"favs\"\n                            id=\"only-favs\"\n                            onChange={this.onFilterFavs}\n                        />\n                    </div>\n                    <TagList\n                        tags={this.props.tags}\n                        onTagSelection={this.onTagSelection}\n                        selectedTags={this.props.filter.tags}\n                    />\n                    <Nav days={this.props.days} />\n                    <Events>\n                        <EventList\n                            events={this.props.events}\n                            onFav={this.onFav}\n                            favs={this.props.favorites}\n                            onEventClick={this.onShowDialog}\n                        />\n                    </Events>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport App from './App';\nimport store from \"./Store\";\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}