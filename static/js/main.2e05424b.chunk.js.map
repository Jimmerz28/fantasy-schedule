{"version":3,"sources":["components/Tags.module.css","Actions.js","constants.js","Reducers.js","helpers.js","Store.js","components/EventList.js","components/Nav.js","components/Tags.js","selectors.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","tags","tag","-checked","REQUEST_EVENTS","requestEvents","type","RECEIVE_EVENTS","fetchPosts","dispatch","fetch","then","res","json","error","console","events","ADD_TAG","REMOVE_TAG","ADD_FAVORITE","REMOVE_FAVORITE","FILTER_FAVORITES","dateTimeFormat","dateFormat","headerDateFormat","Reducers_filters","onlyFavs","Reducers","Object","redux","state","arguments","length","undefined","_ref","reduce","acc","event","date","format","parse","Date","createDate","day","esm_format","found","find","chunk","push","sort","a","b","first","next","compareAsc","_ref2","_toConsumableArray","Set","map","favorites","_ref4","eventID","concat","filter","current","_ref3","_ref3$checked","checked","_objectSpread","Store","redux_thunk_es","components_EventList","onFav","filters","favs","list","daysEvents","id","includes","react_default","createElement","key","htmlFor","name","onChange","components_Nav","days","href","cx","bind_default","bind","Tags_module_default","Tags","selectedTags","onTagSelection","classes","className","slice","filteredEvents","lib","App_App","_ref$target","target","removeTag","_ref2$target","removeFavorite","onFilterFavs","filterFavs","this","props","react","src_App_0","es","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","react_dom_default","render","store","document","getElementById","URL","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2e05424b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"Tags_tags__MTuyM\",\"tag\":\"Tags_tag__18479\",\"-checked\":\"Tags_-checked__3xFnW\"};","// See: https://redux.js.org/advanced/async-actions#actions-js-asynchronous\nexport const REQUEST_EVENTS = \"EVENTS::REQUEST\";\nfunction requestEvents() {\n    return {\n        type: REQUEST_EVENTS\n    };\n}\n\nexport const RECEIVE_EVENTS = \"EVENTS::RECIEVED\";\nfunction receiveEvents(events) {\n    return {\n        type: RECEIVE_EVENTS,\n        events\n    };\n}\n\nexport function fetchPosts() {\n    return function (dispatch) {\n        dispatch(requestEvents);\n\n        return fetch(\"http://localhost:3001/events\")\n            .then(res => res.json(), error => console.error(error))\n\n            .then(json => {\n                dispatch(receiveEvents(json));\n            });\n    };\n}\n\nexport const ADD_TAG = \"TAG::ADD\";\nexport function addTag(tag) {\n    return {\n        type: ADD_TAG,\n        tag\n    }\n}\n\nexport const REMOVE_TAG = \"TAG::REMOVE\";\nexport function removeTag(tag) {\n    return {\n        type: REMOVE_TAG,\n        tag\n    }\n}\n\nexport const ADD_FAVORITE = \"FAVORITE::ADD\";\nexport function addFavorite(eventID) {\n    return {\n        type: ADD_FAVORITE,\n        eventID\n    }\n}\n\nexport const REMOVE_FAVORITE = \"FAVORITE::REMOVE\";\nexport function removeFavorite(eventID) {\n    return {\n        type: REMOVE_FAVORITE,\n        eventID\n    }\n}\n\nexport const FILTER_FAVORITES = \"FAVORITES::FILTER\";\nexport function filterFavs(checked) {\n    return {\n        type: FILTER_FAVORITES,\n        checked\n    }\n}\n","// Generated via http://phrogz.net/css/distinct-colors.html\nexport const colors = [\n    \"#b23e2d\",\n    \"#4d3e39\",\n    \"#ff8800\",\n    \"#f2ea79\",\n    \"#3e4020\",\n    \"#00ff44\",\n    \"#60bf93\",\n    \"#203e40\",\n    \"#66aacc\",\n    \"#005fb3\",\n    \"#6600ff\",\n    \"#240059\",\n    \"#c999cc\",\n    \"#cc0088\",\n    \"#40001a\"\n];\n\nexport const dateTimeFormat = \"MM/dd/yyyy hh:mm aaa\";\nexport const dateFormat = \"M/dd/yyyy\";\nexport const headerDateFormat = \"eeee, LLL d\";\n","// @flow\n\nimport { compareAsc, format, parse } from \"date-fns\";\nimport { combineReducers } from \"redux\";\nimport { ADD_FAVORITE, ADD_TAG, FILTER_FAVORITES, RECEIVE_EVENTS, REMOVE_FAVORITE, REMOVE_TAG } from \"./Actions\";\nimport { headerDateFormat } from \"./constants\";\nimport {createDate} from \"./helpers\";\nimport type { DaysEvents, VanillaEvent } from \"./types\";\n\nfunction events(state = [], { type, events }: { type: string, events: Array<VanillaEvent> }) {\n    switch (type) {\n\n        case RECEIVE_EVENTS:\n\n            // We want to split up the date events into days\n            const chunked = events.reduce((acc: Array<DaysEvents>, event: VanillaEvent) => {\n\n                event[\"Start Date & Time\"] = createDate(event[\"Start Date & Time\"]);\n\n                const day: string = format(event[\"Start Date & Time\"], headerDateFormat);\n                const found: void | DaysEvents = acc.find(chunk => chunk.day === day);\n\n                if (found) {\n                    found.events.push(event);\n                } else {\n                    acc.push({ day, events: [] });\n                }\n\n                return acc;\n\n            }, []);\n\n            return chunked.sort((a, b) => {\n                const first = parse(a.day, headerDateFormat, new Date());\n                const next = parse(b.day, headerDateFormat, new Date());\n\n                return compareAsc(first, next);\n            });\n\n        default:\n            return state;\n    }\n}\n\nfunction tags(state = [], { type, events }) {\n    switch (type) {\n        case RECEIVE_EVENTS:\n            return [...new Set(events.map(event => event['Event Type']))];\n        default:\n            return state;\n    }\n}\n\nconst filters = {\n    tags: [],\n    onlyFavs: false\n};\nfunction filter(state = filters, { type, tag, checked = false }) {\n    switch (type) {\n\n        // @NOTE: Not sure if we need add/remove to be separate\n        case ADD_TAG:\n            return {...state, tags: [...state.tags, tag] };\n        case REMOVE_TAG:\n            return { ...state, tags: state.tags.filter(current => current !== tag) };\n        case FILTER_FAVORITES:\n            return { ...state, onlyFavs: checked };\n        default:\n            return state;\n    }\n}\n\nfunction favorites(state = [], { type, eventID }) {\n    switch (type) {\n        case ADD_FAVORITE:\n            return [...state, eventID];\n        case REMOVE_FAVORITE:\n            return state.filter(current => current !== eventID);\n        default:\n            return state;\n    }\n}\n\nconst genconApp = combineReducers({\n    events,\n    tags,\n    favorites,\n    filter\n});\n\nexport default genconApp;\n","import { parse } from \"date-fns\";\n\nimport { dateFormat, dateTimeFormat } from \"./constants\";\n\nexport function createDate(date, withTime = true) {\n    const format = withTime ? dateTimeFormat : dateFormat;\n\n    return parse(date, format, new Date());\n}\n","import { applyMiddleware, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport genconApp from \"./Reducers\";\n\nconst store = createStore(\n    genconApp,\n    applyMiddleware(\n        thunkMiddleware\n    )\n);\n\nexport default store;\n","import React from 'react';\n\nconst EventList = ({ events, filters, onFav, favs }) => {\n\n    const list = events.map(({ day, events }) => {\n\n        const daysEvents = events\n\n            // .filter(event => {\n            //     // First check to see if we even have anything to filter\n            //     if (filters.tags.length === 0) {\n\n            //         // If we don't just show all events\n            //         return true;\n            //     }\n\n            //     // Otherwise check if our event type should be filtered out\n            //     return filters.tags.includes(event[\"Event Type\"]);\n            // })\n\n            // .filter(event => {\n\n            //     if (filters.onlyFavs) {\n            //         return favs.includes(event[\"Game ID\"]);\n            //     }\n\n            //     return true;\n            // })\n\n            .map(event => {\n\n                const id = event[\"Game ID\"];\n                const checked = favs.includes(id);\n\n                return (\n                    <li key={id}>\n                        <p>{event[\"Title\"]}</p>\n                        <p>{event[\"Event Type\"]}</p>\n                        <label htmlFor={id}>Favorite</label>\n                        <input type=\"checkbox\" name={id} id={id} onChange={onFav} checked={checked} />\n                    </li>\n                );\n            });\n\n        return (\n            <div key={day} id={day}>\n                <h2>{day}</h2>\n                <ul>{daysEvents}</ul>\n            </div>\n        );\n\n    });\n\n    return (\n        <div>\n            <ul>{list}</ul>\n        </div>\n    );\n}\n\nexport default EventList;\n","import React from 'react';\n\nconst Nav = ({ days }) => {\n\n    const list = days.map(day => {\n        return <li key={day}>\n                <a href={`#${day}`}>\n                    {day}\n                </a>\n            </li>;\n    });\n\n    return (\n        <nav>\n            <ul>{list}</ul>\n        </nav>\n    );\n}\n\nexport default Nav;\n","import classNames from \"classnames/bind\";\nimport React from 'react';\nimport styles from './Tags.module.css';\n\nlet cx = classNames.bind(styles);\n\nconst TagList = ({tags, selectedTags, onTagSelection}) => {\n\n    const list = tags.map(tag => {\n        const checked = selectedTags.includes(tag);\n        const classes = cx({\n            '-checked': checked,\n            tag: true\n        });\n\n        return (\n            <div key={tag} className={classes}>\n                <label htmlFor={tag}><span>{tag.slice(6)}</span></label>\n                <input type=\"checkbox\" name={tag} id={tag} onChange={onTagSelection} checked={checked} />\n            </div>\n        );\n    });\n\n    return <form className={styles.tags}>{ list }</form>;\n};\n\nexport default TagList;\n","import { createSelector } from \"reselect\";\n\nconst getEvents = state => state.events;\nconst getSelectedTags = state => state.filter.tags;\n\nexport const filteredEvents = createSelector(\n    [getSelectedTags, getEvents],\n    (tags, events) => {\n\n        switch(tags.length === 0) {\n            case true:\n                return events;\n            case false:\n                return events.map(({ day, events }) => {\n                    return { day, events: events.filter(event =>\n                            tags.includes(event[\"Event Type\"])\n                        ) };\n                });\n            default:\n                return events;\n        }\n    }\n);\n","import \"./App.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    addFavorite,\n    addTag,\n    fetchPosts,\n    filterFavs,\n    removeFavorite,\n    removeTag\n} from \"./Actions\";\nimport store from \"./Store\";\nimport EventList from \"./components/EventList\";\nimport Nav from \"./components/Nav\";\nimport TagList from \"./components/Tags\";\nimport { filteredEvents } from \"./selectors\";\n\nconst mapStateToProps = state => {\n\n    const { tags, favorites, filter } = state;\n\n    return {\n        tags,\n        favorites,\n        filter,\n        events: filteredEvents(state),\n        days: state.events.reduce((acc, event) => {\n            acc.push(event.day);\n            return acc;\n        }, [])\n    };\n};\n\nclass App extends Component {\n    componentDidMount() {\n        store.dispatch(fetchPosts());\n    }\n\n    onTagSelection = ({ target: { name, checked } }) => {\n        if (checked) {\n            store.dispatch(addTag(name));\n        } else {\n            store.dispatch(removeTag(name));\n        }\n    };\n\n    onFav = ({ target: { id, checked } }) => {\n        if (checked) {\n            store.dispatch(addFavorite(id));\n        } else {\n            store.dispatch(removeFavorite(id));\n        }\n    };\n\n    onFilterFavs = ({ target: { checked } }) => {\n        store.dispatch(filterFavs(checked));\n    };\n\n    render() {\n        return (\n            <main>\n                <div className=\"tag\">\n                    <label htmlFor=\"only-favs\">Show Only Favorites</label>\n                    <input\n                        type=\"checkbox\"\n                        name=\"favs\"\n                        id=\"only-favs\"\n                        onChange={this.onFilterFavs}\n                    />\n                </div>\n                <TagList\n                    tags={this.props.tags}\n                    onTagSelection={this.onTagSelection}\n                    selectedTags={this.props.filter.tags}\n                />\n                <Nav days={this.props.days} />\n                <EventList\n                    events={this.props.events}\n                    onFav={this.onFav}\n                    favs={this.props.favorites}\n                />\n            </main>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport store from \"./Store\";\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}