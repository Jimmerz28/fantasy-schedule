{"version":3,"sources":["components/Tags.module.css","components/Nav.module.css","components/EventDetail.module.css","components/EventList.module.css","components/Dialog.module.css","Actions.js","constants.js","helpers.js","Reducers.js","Store.js","components/EventDetail.js","components/Dialog.js","components/EventList.js","components/Nav.js","components/Tags.js","polyfills.js","selectors.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","tags","tag","-checked","event-days","-active","location","events","event-dialog","REQUEST_EVENTS","requestEvents","type","RECEIVE_EVENTS","fetchPosts","dispatch","fetch","then","res","json","error","console","ADD_TAG","REMOVE_TAG","ADD_FAVORITE","REMOVE_FAVORITE","FILTER_FAVORITES","SELECT_EVENT","colors","dateTimeFormat","dateFormat","headerDateFormat","naviDateFormat","createDate","date","format","arguments","length","undefined","Object","parse","Date","filters","onlyFavs","Reducers","redux","state","_ref","reduce","acc","event","day","esm_format","found","find","chunk","push","sort","a","b","first","next","compareAsc","chunkEvents","_ref2","_toConsumableArray","Set","map","index","color","favorites","_ref4","eventID","concat","filter","current","_ref3","_ref3$checked","checked","_objectSpread","selectedEvent","_ref5","id","loggerMiddleware","redux_logger","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","redux_thunk_es","Store","components_EventDetail","relatedEvents","related","single","react_default","createElement","key","toString","className","EventDetail_module_default","end","eventStartEndTime","slice","components_Dialog","show","onClose","Dialog_module_default","onClick","components_EventList","onFav","favs","showDialog","list","stringFormat","daysEvents","includes","bind","htmlFor","name","onChange","replace","EventList_module_default","components_Nav","activeDay","hash","target","_this","setState","_this2","this","props","days","value","formatted","href","classes","classnames_default","Nav_defineProperty","Nav_module_default","react","cx","bind_default","Tags_module_default","Tags","selectedTags","onTagSelection","style","--tag-color","polyfills","getEvents","filteredEvents","lib","filterdResults","eventDays","chosenEvent","some","singleEvent","selectors_relatedEvents","apply","selectors_toConsumableArray","App_App","_ref$target","removeTag","_ref2$target","removeFavorite","onFilterFavs","filterFavs","onShowDialog","selectEvent","eventDialog","showModal","onHideDialog","close","registerDialog","dialogEvent","document","querySelector","src_App_0","es","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","react_dom_default","render","store","getElementById","URL","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.97dc19c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"Tags_tags__33cad\",\"tag\":\"Tags_tag__1DkF9\",\"-checked\":\"Tags_-checked__2JlTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event-days\":\"Nav_event-days__3gjk_\",\"-active\":\"Nav_-active__3hA8p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"location\":\"EventDetail_location__WlgXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"events\":\"EventList_events___LJlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event-dialog\":\"Dialog_event-dialog__2sWkN\"};","// See: https://redux.js.org/advanced/async-actions#actions-js-asynchronous\nexport const REQUEST_EVENTS = \"EVENTS::REQUEST\";\nfunction requestEvents() {\n    return {\n        type: REQUEST_EVENTS\n    };\n}\n\nexport const RECEIVE_EVENTS = \"EVENTS::RECIEVED\";\nfunction receiveEvents(events) {\n    return {\n        type: RECEIVE_EVENTS,\n        events\n    };\n}\n\nexport function fetchPosts() {\n    return function (dispatch) {\n        dispatch(requestEvents);\n\n        return fetch(process.env.REACT_APP_EVENTS_URL)\n            .then(res => res.json(), error => console.error(error))\n\n            .then(json => {\n                dispatch(receiveEvents(json));\n            });\n    };\n}\n\nexport const ADD_TAG = \"TAG::ADD\";\nexport function addTag(tag) {\n    return {\n        type: ADD_TAG,\n        tag\n    }\n}\n\nexport const REMOVE_TAG = \"TAG::REMOVE\";\nexport function removeTag(tag) {\n    return {\n        type: REMOVE_TAG,\n        tag\n    }\n}\n\nexport const ADD_FAVORITE = \"FAVORITE::ADD\";\nexport function addFavorite(eventID) {\n    return {\n        type: ADD_FAVORITE,\n        eventID\n    }\n}\n\nexport const REMOVE_FAVORITE = \"FAVORITE::REMOVE\";\nexport function removeFavorite(eventID) {\n    return {\n        type: REMOVE_FAVORITE,\n        eventID\n    }\n}\n\nexport const FILTER_FAVORITES = \"FAVORITES::FILTER\";\nexport function filterFavs(checked) {\n    return {\n        type: FILTER_FAVORITES,\n        checked\n    }\n}\n\nexport const SELECT_EVENT = \"EVENT::SELECTED\";\nexport function selectEvent(id) {\n    return {\n        type: SELECT_EVENT,\n        id\n    }\n}\n","// Generated via http://tools.medialab.sciences-po.fr/iwanthue/index.php\nexport const colors = [\n    \"#d7f2cc\",\n    \"#88aee1\",\n    \"#e6d3a5\",\n    \"#cec9f3\",\n    \"#b9cda1\",\n    \"#dfbbe3\",\n    \"#96bfad\",\n    \"#e8a9a5\",\n    \"#90d3e0\",\n    \"#f3d7b6\",\n    \"#a5cbeb\",\n    \"#ccb295\",\n    \"#b9aace\",\n    \"#c1e2d3\",\n    \"#dfb9be\",\n    \"#c7dfee\",\n    \"#ead9c9\",\n    \"#a9b6cc\",\n    \"#e5d1e3\"\n];\n\nexport const dateTimeFormat = \"MM/dd/yyyy hh:mm aaa\";\nexport const dateFormat = \"M/dd/yyyy\";\nexport const headerDateFormat = \"eeee, LLL d\";\nexport const naviDateFormat = \"MMM d\";\n","import { format, parse } from \"date-fns\";\nimport { compareAsc } from \"date-fns\";\nimport { dateFormat, dateTimeFormat, headerDateFormat, naviDateFormat } from \"./constants\";\nimport type { VanillaEvent } from './types';\n\nexport function createDate(date, withTime = true) {\n    const format = withTime ? dateTimeFormat : dateFormat;\n\n    return parse(date, format, new Date());\n}\n\nexport function createDayID(date, stringFormat) {\n    return format(parse(date, stringFormat, new Date()), naviDateFormat).replace(\" \", \"-\");\n}\n\n// @TODO: This will need to be more robust since some events are overnight\nexport function eventStartEndTime(event: VanillaEvent) {\n    const end = createDate(event[\"End Date & Time\"]);\n    return `${format(event[\"Start Date & Time\"], \"EEE. MMM d, h:mm aaa\")} - ${format(end, \"h:mm aaa\")}`;\n}\n\nexport function chunkEvents(events) {\n    const chunked = events.reduce((acc: Array<DaysEvents>, event: VanillaEvent) => {\n\n        event[\"Start Date & Time\"] = createDate(event[\"Start Date & Time\"]);\n\n        const day: string = format(event[\"Start Date & Time\"], headerDateFormat);\n        const found: void | DaysEvents = acc.find(chunk => chunk.day === day);\n\n        if (found) {\n            found.events.push(event);\n        } else {\n            acc.push({ day, events: [] });\n        }\n\n        return acc;\n\n    }, []);\n\n    return chunked.sort((a, b) => {\n        const first = parse(a.day, headerDateFormat, new Date());\n        const next = parse(b.day, headerDateFormat, new Date());\n\n        return compareAsc(first, next);\n    });\n}\n","// @flow\n\nimport { combineReducers } from \"redux\";\nimport { ADD_FAVORITE, ADD_TAG, FILTER_FAVORITES, RECEIVE_EVENTS, REMOVE_FAVORITE, REMOVE_TAG, SELECT_EVENT } from \"./Actions\";\nimport { colors } from \"./constants\";\nimport { chunkEvents } from \"./helpers\";\nimport type { VanillaEvent } from \"./types\";\n\nfunction events(state = [], { type, events }: { type: string, events: Array<VanillaEvent> }) {\n    switch (type) {\n\n        case RECEIVE_EVENTS:\n\n            // We want to split up the date events into days\n            return chunkEvents(events);\n\n        default:\n            return state;\n    }\n}\n\nfunction tags(state = [], { type, events }) {\n    switch (type) {\n        case RECEIVE_EVENTS:\n            return [...new Set(events.map(event => event['Event Type']))]\n                .sort()\n                .map((tag, index) => {\n                    return {\n                        tag,\n                        color: colors[index]\n                    }\n                });\n        default:\n            return state;\n    }\n}\n\nconst filters = {\n    tags: [],\n    onlyFavs: false\n};\nfunction filter(state = filters, { type, tag, checked = false }) {\n    switch (type) {\n\n        // @NOTE: Not sure if we need add/remove to be separate\n        case ADD_TAG:\n            return { ...state, tags: [...state.tags, tag] };\n        case REMOVE_TAG:\n            return { ...state, tags: state.tags.filter(current => current !== tag) };\n        case FILTER_FAVORITES:\n            return { ...state, onlyFavs: checked };\n        default:\n            return state;\n    }\n}\n\nfunction favorites(state = [], { type, eventID }) {\n    switch (type) {\n        case ADD_FAVORITE:\n            return [...state, eventID];\n        case REMOVE_FAVORITE:\n            return state.filter(current => current !== eventID);\n        default:\n            return state;\n    }\n}\n\nfunction selectedEvent(state = '', { type, id }) {\n    switch (type) {\n        case SELECT_EVENT:\n            return id;\n        default:\n            return state;\n    }\n}\n\nconst genconApp = combineReducers({\n    events,\n    tags,\n    favorites,\n    filter,\n    selectedEvent\n});\n\nexport default genconApp;\n","import { applyMiddleware, compose, createStore } from \"redux\";\n\nimport { createLogger } from \"redux-logger\";\nimport genconApp from \"./Reducers\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst loggerMiddleware = createLogger();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet enhancer = composeEnhancers(applyMiddleware(\n    thunkMiddleware,\n    loggerMiddleware\n));\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunkMiddleware);\n}\n\nconst store = createStore(\n    genconApp,\n    enhancer\n);\n\nexport default store;\n","// @flow\n\nimport React from 'react';\nimport { eventStartEndTime } from '../helpers';\nimport type { VanillaEvent } from '../types';\nimport styles from \"./EventDetail.module.css\";\n\nconst EventDetail = ({ event, relatedEvents }: { event: VanillaEvent, relatedEvents: Array<VanillaEvent> }) => {\n\n    if (!event) {\n        return null;\n    }\n\n    // @TODO: Make this look nicer\n    const related = relatedEvents.map(single => (\n        <li key={single[\"Game ID\"]}>{single[\"Start Date & Time\"].toString()}</li>\n    ));\n\n    return (\n        <div className={ styles[\"event-detail\"] }>\n            <h1>{event[\"Title\"]}</h1>\n            <p>{eventStartEndTime(event)}</p>\n            <p className={ styles[\"location\"] }>\n                <span>{event[\"Location\"]}</span>\n                <span>{event[\"Room Name\"]}</span>\n                <span>{event[\"Table Number\"]}</span>\n            </p>\n            <p>{event[\"Short Description\"]}</p>\n            <p>{event[\"Long Description\"]}</p>\n            <p>{event[\"Event Type\"].slice(6)}</p>\n            <h2>Related Events</h2>\n            <ul>{related}</ul>\n        </div>\n    );\n}\n\nexport default EventDetail;\n","// @flow\n\nimport React from 'react';\nimport type { VanillaEvent } from '../types';\nimport styles from './Dialog.module.css';\nimport EventDetail from './EventDetail';\n\nconst Dialog = ({ show, event, onClose, relatedEvents }:\n        { show: boolean, event: VanillaEvent, onClose: Function, relatedEvents: Array<VanillaEvent> }) => {\n    return (\n        <dialog className={ styles[\"event-dialog\"] }>\n            <section>\n                <button type=\"button\" onClick={onClose}>Close</button>\n                <EventDetail event={event} relatedEvents={relatedEvents}/>\n            </section>\n        </dialog>\n    );\n}\n\nexport default Dialog;\n","import React from 'react';\nimport { createDayID } from \"../helpers\";\nimport { headerDateFormat } from \"../constants\";\nimport styles from \"./EventList.module.css\";\n\nconst EventList = ({ events, onFav, favs, showDialog }) => {\n\n    const list = events.map(({ day, events }) => {\n\n        const daysEvents = events.map(event => {\n\n                const id = event[\"Game ID\"];\n                const checked = favs.includes(id);\n\n                // @TODO: Don't trigger the dialog if the favorite input is clicked\n                return (\n                    <li key={id} onClick={ showDialog.bind(this, id) }>\n                        <p>{event[\"Title\"]}</p>\n                        <p>{event[\"Event Type\"]}</p>\n                        <label htmlFor={id}>Favorite</label>\n                        <input type=\"checkbox\" name={id} id={id}\n                            onChange={onFav} checked={checked} />\n                    </li>\n                );\n            });\n\n        return (\n            <div key={day} id={ createDayID(day, headerDateFormat) }>\n                <h2>{day}</h2>\n                <ul>{daysEvents}</ul>\n            </div>\n        );\n\n    });\n\n    return (\n        <div className={ styles.events }>\n            <ul>{list}</ul>\n        </div>\n    );\n}\n\nexport default EventList;\n","// @flow\n\nimport React, { Component } from 'react';\n\nimport type { NaviDay } from \"../types\";\nimport classNames from \"classnames\";\nimport styles from \"./Nav.module.css\";\n\ntype P = {\n    days: Array<NaviDay>\n};\n\ntype S = {\n    activeDay: string;\n};\n\nclass Nav extends Component<P, S> {\n\n    state = {\n        activeDay: ''\n    };\n\n    onClick = ({ target: { hash } }: { target: HTMLAnchorElement }) => {\n        this.setState({ activeDay: hash });\n    }\n\n    render() {\n\n        const { days } = this.props;\n\n        const list = days.map(({ value, formatted }: { value: string, formatted: string }) => {\n\n            const href = `#${formatted}`.replace(\" \", \"-\");\n\n            const classes = classNames({ [styles[\"-active\"]]: (href === this.state.activeDay) });\n\n            return <li key={value} className={classes}>\n                    <a href={href} onClick={this.onClick}>\n                        {formatted}\n                    </a>\n                </li>;\n        });\n\n        return (\n            <nav className={styles[\"event-days\"]}>\n                <ul>{list}</ul>\n            </nav>\n        );\n    }\n}\n\nexport default Nav;\n","import classNames from \"classnames/bind\";\nimport React from 'react';\nimport styles from './Tags.module.css';\n\nlet cx = classNames.bind(styles);\n\nconst TagList = ({tags, selectedTags, onTagSelection}) => {\n\n    const list = tags.map(({tag, color}) => {\n\n        const checked = selectedTags.includes(tag);\n        const classes = cx({\n            '-checked': checked,\n            tag: true\n        });\n\n        return (\n            <div key={tag} className={classes} style={{'--tag-color': color }}>\n                <label htmlFor={tag}><span>{tag.slice(6)}</span></label>\n                <input type=\"checkbox\" name={tag} id={tag} onChange={onTagSelection} checked={checked} />\n            </div>\n        );\n    });\n\n    return (\n        <div className={styles.tags}>\n            <form>{list}</form>\n        </div>\n    );\n};\n\nexport default TagList;\n","import * as dialogPolyfill from '../node_modules/dialog-polyfill/dialog-polyfill.js';\n\nexport default dialogPolyfill;\n","// @flow\n\nimport { format, parse } from \"date-fns\";\nimport { createSelector } from \"reselect\";\nimport { headerDateFormat, naviDateFormat } from \"./constants\";\nimport type { DaysEvents, VanillaEvent } from \"./types\";\n\nconst getEvents = state => state.events;\nconst getSelectedTags = state => state.filter.tags;\nconst getFavs = state => state.favorites;\nconst isOnlyFavorites = state => state.filter.onlyFavs;\nconst selectedEventID = state => state.selectedEvent;\n\nexport const filteredEvents = createSelector(\n    [getSelectedTags, isOnlyFavorites, getFavs, getEvents],\n    (tags, onlyFavs, favs, events) => {\n        let filterdResults = events;\n\n        if (tags.length) {\n            filterdResults = filterdResults.map(({ day, events }) => {\n                return {\n                    day,\n                    events: events.filter(event =>\n                        tags.includes(event[\"Event Type\"])\n                    )\n                };\n            });\n        }\n\n        if (onlyFavs) {\n            filterdResults = filterdResults.map(({ day, events }) => {\n                return {\n                    day,\n                    events: events.filter(event =>\n                        favs.includes(event[\"Game ID\"])\n                    )\n                };\n            });\n        }\n\n        return filterdResults;\n    }\n);\n\nexport const eventDays = createSelector(\n    [getEvents],\n    (events) => {\n        return events.reduce((acc, event) => {\n            acc.push({\n                value: event.day,\n                formatted: format(\n                    parse(event.day, headerDateFormat, new Date()),\n                    naviDateFormat\n                )\n            });\n            return acc;\n        }, []);\n    }\n);\n\nexport const chosenEvent = createSelector(\n    [filteredEvents, selectedEventID],\n    (events: Array<DaysEvents>, eventID: string) => {\n        let selectedEvent = null;\n\n        events.some(({ day, events }) => {\n            selectedEvent = events.find((singleEvent: VanillaEvent) => singleEvent[\"Game ID\"] === eventID)\n\n            return selectedEvent;\n        });\n\n        return selectedEvent;\n    }\n);\n\n\nexport const relatedEvents = createSelector(\n    [filteredEvents, chosenEvent],\n    (filteredEvents: Array<DaysEvents>, chosenEvent: VanillaEvent) => {\n\n        if (!chosenEvent) {\n            return [];\n        }\n\n        return filteredEvents.reduce((acc, { day, events }) => {\n            const related = events.filter(event => (\n                event[\"Title\"] === chosenEvent[\"Title\"]) &&\n                (event[\"Game ID\"] !== chosenEvent[\"Game ID\"]));\n            acc.push(...related);\n            return acc;\n        }, []);\n    }\n);\n","import \"./App.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    addFavorite,\n    addTag,\n    fetchPosts,\n    filterFavs,\n    removeFavorite,\n    removeTag,\n    selectEvent\n} from \"./Actions\";\nimport store from \"./Store\";\nimport Dialog from \"./components/Dialog\";\nimport EventList from \"./components/EventList\";\nimport Nav from \"./components/Nav\";\nimport TagList from \"./components/Tags\";\nimport dialogPolyfill from './polyfills';\nimport { chosenEvent, eventDays, filteredEvents, relatedEvents } from \"./selectors\";\n\nconst mapStateToProps = state => {\n\n    const { tags, favorites, filter } = state;\n\n    return {\n        tags,\n        favorites,\n        filter,\n        dialogEvent: chosenEvent(state),\n        events: filteredEvents(state),\n        relatedEvents: relatedEvents(state),\n        days: eventDays(state)\n    };\n};\n\nclass App extends Component {\n    componentDidMount() {\n        store.dispatch(fetchPosts());\n\n        dialogPolyfill.registerDialog(this.eventDialog);\n    }\n\n    get eventDialog(): HTMLDialogElement {\n        const eventDialog = document.querySelector('dialog');\n\n        return eventDialog;\n    }\n\n    onTagSelection = ({ target: { name, checked } }) => {\n        if (checked) {\n            store.dispatch(addTag(name));\n        } else {\n            store.dispatch(removeTag(name));\n        }\n    };\n\n    onFav = ({ target: { id, checked } }) => {\n        if (checked) {\n            store.dispatch(addFavorite(id));\n        } else {\n            store.dispatch(removeFavorite(id));\n        }\n    };\n\n    onFilterFavs = ({ target: { checked } }) => {\n        store.dispatch(filterFavs(checked));\n    };\n\n    // @NOTE: Check if we can replace this with the native .showModal() API, however,\n    // will need a polyfill since support is shitty on mobile\n    onShowDialog = (id) => {\n        store.dispatch(selectEvent(id));\n        this.eventDialog.showModal();\n    }\n\n    onHideDialog = () => {\n        this.eventDialog.close();\n    }\n\n    render() {\n        return (\n            <div>\n                <Dialog\n                    show={this.props.showDialog}\n                    event={this.props.dialogEvent}\n                    relatedEvents={this.props.relatedEvents}\n                    onClose={this.onHideDialog}\n                />\n                <main className=\"app\">\n                    <div className=\"tag -fav\">\n                        <label htmlFor=\"only-favs\">Show Only Favorites</label>\n                        <input\n                            type=\"checkbox\"\n                            name=\"favs\"\n                            id=\"only-favs\"\n                            onChange={this.onFilterFavs}\n                        />\n                    </div>\n                    <TagList\n                        tags={this.props.tags}\n                        onTagSelection={this.onTagSelection}\n                        selectedTags={this.props.filter.tags}\n                    />\n                    <Nav days={this.props.days} />\n                    <EventList\n                        events={this.props.events}\n                        onFav={this.onFav}\n                        favs={this.props.favorites}\n                        showDialog={this.onShowDialog}\n                    />\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport App from './App';\nimport store from \"./Store\";\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}