{"version":3,"sources":["components/Favorite.module.css","components/EventDetail.module.css","components/Nav.module.css","components/Tags.module.css","components/AllEvents.module.css","components/DaysList.module.css","components/Event.module.css","components/Dialog.module.css","Actions.js","constants.js","helpers.js","Reducers.js","Store.js","components/Favorite.js","components/Event.js","components/ListOfEvents.js","components/DaysList.js","components/AllEvents.js","components/RelatedEvents.js","components/EventDetail.js","components/Dialog.js","components/Nav.js","components/Tags.js","polyfills.js","selectors.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","favorite","star","explosion","-checked","activate","explode","location","event-days","-active","tags","tag","events","event-list","event","event-dialog","REQUEST_EVENTS","requestEvents","type","RECEIVE_EVENTS","fetchPosts","dispatch","fetch","process","then","res","json","error","console","ADD_TAG","REMOVE_TAG","ADD_FAVORITE","REMOVE_FAVORITE","FILTER_FAVORITES","SELECT_EVENT","colors","dateTimeFormat","eventTime","dateFormat","headerDateFormat","naviDateFormat","createDate","date","format","arguments","length","undefined","parse","Date","chunkEvents","chunked","reduce","acc","day","found","find","chunk","push","sort","a","b","first","next","compareAsc","forEach","_ref","a1","b1","filters","onlyFavs","genconApp","combineReducers","state","_ref2","Object","toConsumableArray","Set","map","index","color","favorites","_ref4","eventID","concat","filter","current","_ref3","_ref3$checked","checked","objectSpread","selectedEvent","_ref5","id","loggerMiddleware","createLogger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","storage","localForage","persistedReducer","persistReducer","enhancer","applyMiddleware","thunkMiddleware","store","createStore","Store","persistor","persistStore","cx","classnames","bind","styles","Favorite","onClick","name","_ref$checked","svgClasses","react_default","createElement","className","htmlFor","role","xmlns","width","height","viewBox","d","strokeWidth","cy","r","onChange","Event","onFav","isFav","replace","eventStartTime","slice","components_Favorite","ListOfEvents","nextProps","this","props","favs","_this$props","onEventClick","daysEvents","includes","components_Event","Component","DaysList","_this","list","stringFormat","components_ListOfEvents","Events","children","react","RelatedEvents","EventDetail","relatedEvents","end","eventStartEndTime","Dialog","onClose","components_EventDetail","Nav","activeDay","hash","target","setState","_this2","days","i","value","formatted","href","classes","classNames","defineProperty","TagList","selectedTags","onTagSelection","style","--tag-color","dialogPolyfill","getEvents","filteredEvents","createSelector","filterdResults","eventDays","chosenEvent","some","singleEvent","related","apply","storeConfig","App","_ref$target","removeTag","_ref2$target","removeFavorite","onFilterFavs","filterFavs","onShowDialog","selectEvent","eventDialog","showModal","onHideDialog","close","registerDialog","components_RelatedEvents","components_DaysList","info","components_Dialog","show","showDialog","dialogEvent","Tags","components_Nav","AllEvents","document","querySelector","connect","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","render","es","integration_react","loading","src_App_0","getElementById","URL","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,SAAA,2BAAAC,KAAA,uBAAAC,UAAA,4BAAAC,WAAA,2BAAAC,SAAA,2BAAAC,QAAA,+CCAlBP,EAAAC,QAAA,CAAkBO,SAAA,mDCAlBR,EAAAC,QAAA,CAAkBQ,aAAA,wBAAAC,UAAA,0CCAlBV,EAAAC,QAAA,CAAkBU,KAAA,mBAAAC,IAAA,kBAAAP,WAAA,4CCAlBL,EAAAC,QAAA,CAAkBY,OAAA,+CCAlBb,EAAAC,QAAA,CAAkBa,aAAA,kDCAlBd,EAAAC,QAAA,CAAkBc,MAAA,0CCAlBf,EAAAC,QAAA,CAAkBe,eAAA,sPCALC,SAAiB,mBAC9B,SAASC,IACL,MAAO,CACHC,KAAMF,GAIP,IAAMG,EAAiB,mBAQvB,SAASC,IACZ,OAAO,SAAUC,GAGb,OAFAA,EAASJ,GAEFK,MAAMC,gEACRC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAAQ,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,KAE/CH,KAAK,SAAAE,GACFL,EAdL,CACHH,KAAMC,EACNP,OAY+Bc,OAKhC,IAAMG,EAAU,WAQhB,IAAMC,EAAa,cAQnB,IAAMC,EAAe,gBAQrB,IAAMC,EAAkB,mBAQxB,IAAMC,EAAmB,oBAQzB,IAAMC,EAAe,sFCpEfC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAiB,uBACjBC,EAAY,IACZC,EAAa,YACbC,EAAmB,cACnBC,EAAiB,gCCrBvB,SAASC,EAAWC,GAAwC,IACzDC,IADyDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACrCR,EAAiBE,EAE3C,OAAOS,YAAML,EAAMC,EAAQ,IAAIK,MAa5B,SAASC,EAAYrC,GACxB,IAAMsC,EAAUtC,EAAOuC,OAAO,SAACC,EAAwBtC,GAET,kBAA/BA,EAAM,uBACbA,EAAM,qBAAuB2B,EAAW3B,EAAM,uBAGlD,IAAMuC,EAAcV,YAAO7B,EAAM,qBAAsByB,GACjDe,EAA2BF,EAAIG,KAAK,SAAAC,GAAK,OAAIA,EAAMH,MAAQA,IAQjE,OANIC,EACAA,EAAM1C,OAAO6C,KAAK3C,GAElBsC,EAAIK,KAAK,CAAEJ,MAAKzC,OAAQ,CAACE,KAGtBsC,GAER,IAaH,OAXAF,EAAQQ,KAAK,SAACC,EAAGC,GACb,IAAMC,EAAQd,YAAMY,EAAEN,IAAKd,EAAkB,IAAIS,MAC3Cc,EAAOf,YAAMa,EAAEP,IAAKd,EAAkB,IAAIS,MAEhD,OAAOe,YAAWF,EAAOC,KAG7BZ,EAAQc,QAAQ,SAAAC,GAAgBA,EAAbrD,OACR8C,KAAK,SAACQ,EAAIC,GAAL,OAAYJ,YAAWG,EAAG,qBAAsBC,EAAG,0BAG5DjB,EChBX,IAAMkB,EAAU,CACZ1D,KAAM,GACN2D,UAAU,GAqCd,IAQeC,EARGC,YAAgB,CAC9B3D,OArEJ,WAA4F,IAA5E4D,EAA4E5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApE,GAAoEqB,EAAArB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAA9D5B,EAA8D+C,EAA9D/C,KAAMN,EAAwDqD,EAAxDrD,OAChC,OAAQM,GAEJ,KAAKC,EAGD,OAAO8B,EAAYrC,GAEvB,QACI,OAAO4D,IA6Df9D,KAzDJ,WAA4C,IAA9B8D,EAA8B5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB,GAAsB6B,EAAA7B,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAhB5B,EAAgBuD,EAAhBvD,KAAMN,EAAU6D,EAAV7D,OAC9B,OAAQM,GACJ,KAAKC,EACD,OAAOuD,OAAAC,EAAA,EAAAD,CAAI,IAAIE,IAAIhE,EAAOiE,IAAI,SAAA/D,GAAK,OAAIA,EAAM,kBACxC4C,OACAmB,IAAI,SAAClE,EAAKmE,GACP,MAAO,CACHnE,MACAoE,MAAO5C,EAAO2C,MAG9B,QACI,OAAON,IA8CfQ,UAvBJ,WAAkD,IAA/BR,EAA+B5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvB,GAAuBqC,EAAArC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAjB5B,EAAiB+D,EAAjB/D,KAAMgE,EAAWD,EAAXC,QACnC,OAAQhE,GACJ,KAAKa,EACD,OAAO2C,OAAAC,EAAA,EAAAD,CAAIF,GAAXW,OAAA,CAAkBD,IACtB,KAAKlD,EACD,OAAOwC,EAAMY,OAAO,SAAAC,GAAO,OAAIA,IAAYH,IAC/C,QACI,OAAOV,IAiBfY,OAvCJ,WAAiE,IAAjDZ,EAAiD5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzCwB,EAAyCkB,EAAA1C,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAA9B5B,EAA8BoE,EAA9BpE,KAAMP,EAAwB2E,EAAxB3E,IAAwB4E,EAAAD,EAAnBE,eAAmB,IAAAD,KAC7D,OAAQrE,GAGJ,KAAKW,EACD,OAAO6C,OAAAe,EAAA,EAAAf,CAAA,GAAKF,EAAZ,CAAmB9D,KAAKgE,OAAAC,EAAA,EAAAD,CAAKF,EAAM9D,MAAZyE,OAAA,CAAkBxE,MAC7C,KAAKmB,EACD,OAAO4C,OAAAe,EAAA,EAAAf,CAAA,GAAKF,EAAZ,CAAmB9D,KAAM8D,EAAM9D,KAAK0E,OAAO,SAAAC,GAAO,OAAIA,IAAY1E,MACtE,KAAKsB,EACD,OAAOyC,OAAAe,EAAA,EAAAf,CAAA,GAAKF,EAAZ,CAAmBH,SAAUmB,IACjC,QACI,OAAOhB,IA6BfkB,cAdJ,WAAiD,IAA1BlB,EAA0B5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,GAAkB+C,EAAA/C,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAZ5B,EAAYyE,EAAZzE,KAAM0E,EAAMD,EAANC,GACvC,OAAQ1E,GACJ,KAAKgB,EACD,OAAO0D,EACX,QACI,OAAOpB,MChEbqB,EAAmBC,yBACnBC,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAgB,CAClBC,IAAK,MACLC,QAASC,KAEPC,EAAmBC,YAAeL,EAAe7B,GAEnDmC,EAAWV,EAAiBW,YAC5BC,IACAd,IAIAY,EAAWC,YAAgBC,KAG/B,IAAMC,EAAQC,YACVN,EACAE,GAGWK,EAAA,WACX,IAAMC,EAAYC,YAAaJ,GAC/B,MAAO,CAAEA,QAAOG,+GC3BhBE,GAAKC,KAAWC,KAAKC,MA+BVC,GA7BE,SAAApD,GAA4C,IAAzC2B,EAAyC3B,EAAzC2B,GAAI0B,EAAqCrD,EAArCqD,QAASC,EAA4BtD,EAA5BsD,KAA4BC,EAAAvD,EAAtBuB,eAAsB,IAAAgC,KAEnDC,EAAaR,GAAG,CAClB7G,WAAYoF,EACZtF,MAAM,IAGV,OACIwH,EAAA/D,EAAAgE,cAAA,OAAKC,UAAWR,KAAOnH,UACnByH,EAAA/D,EAAAgE,cAAA,SAAOE,QAASjC,GACZ8B,EAAA/D,EAAAgE,cAAA,wBACAD,EAAA/D,EAAAgE,cAAA,OAAKC,UAAWH,EAAYK,KAAK,eAAeC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aAC9GR,EAAA/D,EAAAgE,cAAA,QAAMQ,EAAE,2HACRT,EAAA/D,EAAAgE,cAAA,KAAGS,YAAY,KACXV,EAAA/D,EAAAgE,cAAA,UAAQC,UAAWR,KAAOjH,UAAW8G,GAAG,KAAKoB,GAAG,KAAKC,EAAE,UAInEZ,EAAA/D,EAAAgE,cAAA,SACIzG,KAAK,WACL0E,GAAIA,EACJ2B,KAAMA,EACNgB,SAAUjB,EACV9B,QAASA,MCDVgD,GAvBD,SAAAvE,GAAsC,IAAnCnD,EAAmCmD,EAAnCnD,MAAOwG,EAA4BrD,EAA5BqD,QAASmB,EAAmBxE,EAAnBwE,MAAOC,EAAYzE,EAAZyE,MAE9B9C,EAAK9E,EAAM,WAEjB,OACI4G,EAAA/D,EAAAgE,cAAA,MAAIC,UAAWR,KAAOtG,OAClB4G,EAAA/D,EAAAgE,cAAA,OAAKL,QAASA,EAAQH,YAAWvB,IAC7B8B,EAAA/D,EAAAgE,cAAA,SJ2CT,SAAwB7G,GAG3B,OAFgB6B,YAAO7B,EAAM,qBAAsBuB,GAElCsG,QAAQ,MAAO,II9ChBC,CAAe9H,IACnB4G,EAAA/D,EAAAgE,cAAA,WACID,EAAA/D,EAAAgE,cAAA,SAAI7G,EAAK,OACT4G,EAAA/D,EAAAgE,cAAA,SAAI7G,EAAM,cAAc+H,MAAM,MAGtCnB,EAAA/D,EAAAgE,cAACmB,GAAD,CACIlD,GAAIA,EACJ0B,QAASmB,EACTlB,KAAM3B,EACNJ,QAASkD,MC6BVK,iMAtCWC,GAClB,OAAIA,EAAUpI,OAAOiC,SAAWoG,KAAKC,MAAMtI,OAAOiC,QAC9CmG,EAAUG,KAAKtG,SAAWoG,KAAKC,MAAMC,KAAKtG,wCAOzC,IAAAuG,EAEyCH,KAAKC,MAA3CtI,EAFHwI,EAEGxI,OAAQuI,EAFXC,EAEWD,KAAME,EAFjBD,EAEiBC,aAAcZ,EAF/BW,EAE+BX,MAE9Ba,EAAa1I,EAAOiE,IAAI,SAAA/D,GAE1B,IAAM8E,EAAK9E,EAAM,WACX4H,EAAQS,EAAKI,SAAS3D,GAG5B,OACI8B,EAAA/D,EAAAgE,cAAC6B,GAAD,CACIpD,IAAKR,EACL9E,MAAOA,EACP4H,MAAOA,EACPpB,QAAS+B,EACTZ,MAAOA,MAKnB,OACIf,EAAA/D,EAAAgE,cAAA,UACM2B,UAlCSG,aCyBZC,oLAnBF,IAAAC,EAAAV,KACCW,EAAOX,KAAKC,MAAMtI,OAAOiE,IAAI,SAAAZ,GAAqB,INPpCvB,EAAcmH,EMOIxG,EAAkBY,EAAlBZ,IAAKzC,EAAaqD,EAAbrD,OACvC,OACI8G,EAAA/D,EAAAgE,cAAA,MAAIvB,IAAK/C,EAAKuC,INTFlD,EMSkBW,ENTJwG,EMSStH,ENRxCI,YAAOI,YAAML,EAAMmH,EAAc,IAAI7G,MAASR,GAAgBmG,QAAQ,IAAK,OMSlEjB,EAAA/D,EAAAgE,cAAA,UAAKtE,GACLqE,EAAA/D,EAAAgE,cAACmC,GAAD,CACIlJ,OAASA,EACTuI,KAAOQ,EAAKT,MAAMC,KAClBV,MAAQkB,EAAKT,MAAMT,MACnBY,aAAeM,EAAKT,MAAMG,kBAM1C,OAAO3B,EAAA/D,EAAAgE,cAAA,MAAIC,UAAWR,KAAO,eAAgBwC,UAjB9BH,aCGRM,GARA,SAAA9F,GAAyB,IAAtB+F,EAAsB/F,EAAtB+F,SACd,OACIC,EAAA,qBAAKrC,UAAWR,IAAOxG,QAClBoJ,4CCMEE,GAVO,SAAAjG,GAAyB,IAAtB+F,EAAsB/F,EAAtB+F,SAErB,OACIC,EAAA,yBACIA,EAAA,0CACED,ICiBCG,GAnBK,SAAAlG,GAAqC,IAAlCnD,EAAkCmD,EAAlCnD,MAAOsJ,EAA2BnG,EAA3BmG,cAE1B,OACIH,EAAA,qBAAKrC,UAAWR,KAAO,iBACnB6C,EAAA,wBAAKnJ,EAAK,OACVmJ,EAAA,uBTDL,SAA2BnJ,GAC9B,IAAMuJ,EAAM5H,EAAW3B,EAAM,oBAC7B,SAAAqE,OAAUxC,YAAO7B,EAAM,qBAAsB,wBAA7C,OAAAqE,OAA0ExC,YAAO0H,EAAK,aSD1EC,CAAkBxJ,IACtBmJ,EAAA,mBAAGrC,UAAWR,KAAM,UAChB6C,EAAA,0BAAOnJ,EAAK,UACZmJ,EAAA,0BAAOnJ,EAAM,cACbmJ,EAAA,0BAAOnJ,EAAM,kBAEjBmJ,EAAA,uBAAInJ,EAAM,sBACVmJ,EAAA,uBAAInJ,EAAM,qBACVmJ,EAAA,uBAAInJ,EAAM,cAAc+H,MAAM,IAC7BuB,ICAEG,GAbA,SAAAtG,GAA8C,IAA3CnD,EAA2CmD,EAA3CnD,MAAO0J,EAAoCvG,EAApCuG,QAASJ,EAA2BnG,EAA3BmG,cAE9B,OACIH,EAAA,wBAAQrC,UAAYR,KAAO,iBACvB6C,EAAA,6BACIA,EAAA,wBAAQ/I,KAAK,SAASoG,QAAUkD,GAAhC,SACE1J,GACEmJ,EAAA,cAACQ,GAAD,CAAa3J,MAAQA,EAAQsJ,cAAgBA,wDCgClDM,8MApCXlG,MAAQ,CACJmG,UAAW,MAGfrD,QAAU,SAAArD,GAAyD,IAA5C2G,EAA4C3G,EAAtD4G,OAAUD,KACnBjB,EAAKmB,SAAS,CAAEH,UAAWC,6EAGtB,IAAAG,EAAA9B,KAICW,EAFWX,KAAKC,MAAd8B,KAEUnG,IAAI,SAAAJ,EAA6DwG,GAAM,IAAhEC,EAAgEzG,EAAhEyG,MAAOC,EAAyD1G,EAAzD0G,UAEtBC,EAAO,IAAAjG,OAAIgG,GAAYxC,QAAQ,IAAK,KAGpC0C,EAAUC,KAAW5G,OAAA6G,GAAA,EAAA7G,CAAA,GACtB0C,KAAO,WAAuC,KAAzB2D,EAAKvG,MAAMmG,WAA0B,IAANM,GAAaF,EAAKvG,MAAMmG,YAAcS,IAG/F,OAAO1D,EAAA/D,EAAAgE,cAAA,MAAIvB,IAAK8E,EAAOtD,UAAWyD,GAC1B3D,EAAA/D,EAAAgE,cAAA,KAAGyD,KAAMA,EAAM9D,QAASyD,EAAKzD,SACxB6D,MAKjB,OACIzD,EAAA/D,EAAAgE,cAAA,OAAKC,UAAWR,KAAO,eACnBM,EAAA/D,EAAAgE,cAAA,UAAKiC,WAhCHH,iCCXdxC,GAAKqE,KAAWnE,KAAKC,MA2BVoE,GAzBC,SAAAvH,GAA0C,IAAxCvD,EAAwCuD,EAAxCvD,KAAM+K,EAAkCxH,EAAlCwH,aAAcC,EAAoBzH,EAApByH,eAE5B9B,EAAOlJ,EAAKmE,IAAI,SAAAJ,GAAkB,IAAhB9D,EAAgB8D,EAAhB9D,IAAKoE,EAAWN,EAAXM,MAEnBS,EAAUiG,EAAalC,SAAS5I,GAChC0K,EAAUpE,GAAG,CACf7G,WAAYoF,EACZ7E,KAAK,IAGT,OACI+G,EAAA/D,EAAAgE,cAAA,OAAKvB,IAAKzF,EAAKiH,UAAWyD,EAASM,MAAO,CAACC,cAAe7G,IACtD2C,EAAA/D,EAAAgE,cAAA,SAAOE,QAASlH,GAAK+G,EAAA/D,EAAAgE,cAAA,YAAOhH,EAAIkI,MAAM,KACtCnB,EAAA/D,EAAAgE,cAAA,SAAOzG,KAAK,WAAWqG,KAAM5G,EAAKiF,GAAIjF,EAAK4H,SAAUmD,EAAgBlG,QAASA,OAK1F,OACIkC,EAAA/D,EAAAgE,cAAA,OAAKC,UAAWR,KAAO1G,MACnBgH,EAAA/D,EAAAgE,cAAA,YAAOiC,KCxBJiC,kBCMTC,GAAY,SAAAtH,GAAK,OAAIA,EAAM5D,QAMpBmL,GAAiBC,0BAC1B,CANoB,SAAAxH,GAAK,OAAIA,EAAMY,OAAO1E,MAEtB,SAAA8D,GAAK,OAAIA,EAAMY,OAAOf,UAD9B,SAAAG,GAAK,OAAIA,EAAMQ,WAKiB8G,IAC5C,SAACpL,EAAM2D,EAAU8E,EAAMvI,GACnB,IAAIqL,EAAiBrL,EAwBrB,OAtBIF,EAAKmC,SACLoJ,EAAiBA,EAAepH,IAAI,SAAAZ,GAChC,MAAO,CACHZ,IAFiDY,EAAlBZ,IAG/BzC,OAHiDqD,EAAbrD,OAGrBwE,OAAO,SAAAtE,GAAK,OACvBJ,EAAK6I,SAASzI,EAAM,qBAMhCuD,IACA4H,EAAiBA,EAAepH,IAAI,SAAAJ,GAChC,MAAO,CACHpB,IAFiDoB,EAAlBpB,IAG/BzC,OAHiD6D,EAAb7D,OAGrBwE,OAAO,SAAAtE,GAAK,OACvBqI,EAAKI,SAASzI,EAAM,kBAM7BmL,IAIFC,GAAYF,0BACrB,CAACF,IACD,SAAClL,GACG,OAAOA,EAAOuC,OAAO,SAACC,EAAKtC,GAQvB,OAPAsC,EAAIK,KAAK,CACLyH,MAAOpK,EAAMuC,IACb8H,UAAWxI,YACPI,YAAMjC,EAAMuC,IAAKd,EAAkB,IAAIS,MACvCR,KAGDY,GACR,MAIE+I,GAAcH,0BACvB,CAACD,GAlDmB,SAAAvH,GAAK,OAAIA,EAAMkB,gBAmDnC,SAAC9E,EAA2BsE,GACxB,IAAIQ,EAAgB,KAQpB,OANA9E,EAAOwL,KAAK,SAAA9G,GAAgB,IAAb1E,EAAa0E,EAAb1E,OAGX,OAFA8E,EAAgB9E,EAAO2C,KAAK,SAAC8I,GAAD,OAA8BA,EAAY,aAAenH,MAKlFQ,IAKF0E,GAAgB4B,0BACzB,CAACD,GAAgBI,IACjB,SAACJ,EAAmCI,GAEhC,OAAKA,EAYElJ,EARU8I,EAAe5I,OAAO,SAACC,EAAD6B,GAAqB,IAClDqH,EADkDrH,EAAbrE,OACpBwE,OAAO,SAAAtE,GAAK,OAC/BA,EAAK,QAAcqL,EAAW,OAC7BrL,EAAM,aAAeqL,EAAY,aAEtC,OADA/I,EAAIK,KAAJ8I,MAAAnJ,EAAGsB,OAAAC,EAAA,EAAAD,CAAS4H,IACLlJ,GACR,KATQ,KCzDXwD,GAAU4F,IAAV5F,MAiBF6F,8MAaFf,eAAiB,SAAAzH,GAAmC,IAAAyI,EAAAzI,EAAhC4G,OAAUtD,EAAsBmF,EAAtBnF,KAAsBmF,EAAhBlH,QAE5BoB,GAAMvF,SjB1BP,CACHH,KAAMW,EACNlB,IiBwB0B4G,IAEtBX,GAAMvF,SjBrBX,SAAmBV,GACtB,MAAO,CACHO,KAAMY,EACNnB,OiBkBmBgM,CAAUpF,OAIjCkB,MAAQ,SAAAhE,GAAiC,IAAAmI,EAAAnI,EAA9BoG,OAAUjF,EAAoBgH,EAApBhH,GAAoBgH,EAAhBpH,QAEjBoB,GAAMvF,SjBlBP,CACHH,KAAMa,EACNmD,QiBgB+BU,IAE3BgB,GAAMvF,SjBbX,SAAwB6D,GAC3B,MAAO,CACHhE,KAAMc,EACNkD,WiBUmB2H,CAAejH,OAItCkH,aAAe,SAAAxH,GAA6B,IAAhBE,EAAgBF,EAA1BuF,OAAUrF,QACxBoB,GAAMvF,SjBVP,SAAoBmE,GACvB,MAAO,CACHtE,KAAMe,EACNuD,WiBOeuH,CAAWvH,OAK9BwH,aAAe,SAACpH,GACZgB,GAAMvF,SjBRP,SAAqBuE,GACxB,MAAO,CACH1E,KAAMgB,EACN0D,MiBKeqH,CAAYrH,IAC3B+D,EAAKuD,YAAYC,eAGrBC,aAAe,WACXzD,EAAKuD,YAAYG,4FAvCjBzG,GAAMvF,SAASD,KAEfyK,GAAeyB,eAAerE,KAAKiE,8CA0CnC,IAAM9C,EAAgBnB,KAAKC,MAAMkB,cAAcvH,OAAS,GACpD6E,EAAA/D,EAAAgE,cAAC4F,GAAD,KACI7F,EAAA/D,EAAAgE,cAAC6F,GAAD,CACI5M,OAASqI,KAAKC,MAAMkB,cACpB3B,MAAQQ,KAAKR,MACbY,aAAe,kBAAMzH,QAAQ6L,KAAK,YAClCtE,KAAOF,KAAKC,MAAMlE,aAK9B,OACI0C,EAAA/D,EAAAgE,cAAA,WACID,EAAA/D,EAAAgE,cAAC+F,GAAD,CACIC,KAAM1E,KAAKC,MAAM0E,WACjB9M,MAAOmI,KAAKC,MAAM2E,YAClBzD,cAAeA,EACfI,QAASvB,KAAKmE,eAElB1F,EAAA/D,EAAAgE,cAAA,QAAMC,UAAU,OACZF,EAAA/D,EAAAgE,cAAA,OAAKC,UAAU,YACXF,EAAA/D,EAAAgE,cAACmB,GAAD,CACIxB,QAAS2B,KAAK6D,aACdlH,GAAG,YACH2B,KAAK,YACL/B,QAASyD,KAAKC,MAAM9D,OAAOf,YAGnCqD,EAAA/D,EAAAgE,cAACmG,GAAD,CACIpN,KAAMuI,KAAKC,MAAMxI,KACjBgL,eAAgBzC,KAAKyC,eACrBD,aAAcxC,KAAKC,MAAM9D,OAAO1E,OAEpCgH,EAAA/D,EAAAgE,cAACoG,GAAD,CAAK/C,KAAM/B,KAAKC,MAAM8B,OACtBtD,EAAA/D,EAAAgE,cAACqG,GAAD,KACItG,EAAA/D,EAAAgE,cAAC6F,GAAD,CACI5M,OAAQqI,KAAKC,MAAMtI,OACnB6H,MAAOQ,KAAKR,MACZU,KAAMF,KAAKC,MAAMlE,UACjBqE,aAAcJ,KAAK+D,sDA3EvC,OAFoBiB,SAASC,cAAc,iBARjCzE,aA8FH0E,eA7GS,SAAA3J,GAIpB,MAAO,CACH9D,KAHgC8D,EAA5B9D,KAIJsE,UAJgCR,EAAtBQ,UAKVI,OALgCZ,EAAXY,OAMrByI,YAAa1B,GAAY3H,GACzB5D,OAAQmL,GAAevH,GACvB4F,cAAeA,GAAc5F,GAC7BwG,KAAMkB,GAAU1H,KAoGpB,KAFW2J,CAGb1B,ICjII2B,GAAcC,QACW,cAA7BrI,OAAOzF,SAAS+N,UAEe,UAA7BtI,OAAOzF,SAAS+N,UAEhBtI,OAAOzF,SAAS+N,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTjN,KAAK,SAAAqN,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvK,QACfkK,UAAUC,cAAcO,WAK1BtN,QAAQuN,IAAI,6CAKZvN,QAAQuN,IAAI,2CAMrBC,MAAM,SAAAzN,GACLC,QAAQD,MAAM,4CAA6CA,YCpEpC6K,IAArBzF,gBAAWH,YAEnByI,IAASC,OACL5H,EAAA/D,EAAAgE,cAAC4H,EAAA,EAAD,CAAU3I,MAAQA,IACdc,EAAA/D,EAAAgE,cAAC6H,EAAA,EAAD,CAAaC,QAAU,KAAO1I,UAAYA,IACtCW,EAAA/D,EAAAgE,cAAC+H,GAAD,QAGRzB,SAAS0B,eAAe,SDCb,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIkB,IAAIrO,oBAAwByE,OAAOzF,UAC3CsP,SAAW7J,OAAOzF,SAASsP,OAIvC,OAGF7J,OAAO8J,iBAAiB,OAAQ,WAC9B,IAAMrB,EAAK,GAAAtJ,OAAM5D,oBAAN,sBAEP6M,IAiDV,SAAiCK,GAE/BnN,MAAMmN,GACHjN,KAAK,SAAAuO,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CzB,UAAUC,cAAcyB,MAAM5O,KAAK,SAAAqN,GACjCA,EAAawB,aAAa7O,KAAK,WAC7BwE,OAAOzF,SAAS+P,aAKpB9B,GAAgBC,KAGnBW,MAAM,WACLxN,QAAQuN,IACN,mEArEAoB,CAAwB9B,GAIxBC,UAAUC,cAAcyB,MAAM5O,KAAK,WACjCI,QAAQuN,IACN,+GAMJX,GAAgBC,MC1BxB+B","file":"static/js/main.4a08bf85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"favorite\":\"Favorite_favorite__3bA_Y\",\"star\":\"Favorite_star__3RA9y\",\"explosion\":\"Favorite_explosion__1SDJJ\",\"-checked\":\"Favorite_-checked__1yv38\",\"activate\":\"Favorite_activate__3o-5u\",\"explode\":\"Favorite_explode__2FyQ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"location\":\"EventDetail_location__3ctwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event-days\":\"Nav_event-days__3CjiF\",\"-active\":\"Nav_-active__2TOg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"Tags_tags__MTuyM\",\"tag\":\"Tags_tag__18479\",\"-checked\":\"Tags_-checked__3xFnW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"events\":\"AllEvents_events__3MrPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event-list\":\"DaysList_event-list__37lKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event\":\"Event_event__3jjBe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event-dialog\":\"Dialog_event-dialog__2HWFr\"};","// See: https://redux.js.org/advanced/async-actions#actions-js-asynchronous\nexport const REQUEST_EVENTS = \"EVENTS::REQUEST\";\nfunction requestEvents() {\n    return {\n        type: REQUEST_EVENTS\n    };\n}\n\nexport const RECEIVE_EVENTS = \"EVENTS::RECIEVED\";\nfunction receiveEvents(events) {\n    return {\n        type: RECEIVE_EVENTS,\n        events\n    };\n}\n\nexport function fetchPosts() {\n    return function (dispatch) {\n        dispatch(requestEvents);\n\n        return fetch(process.env.REACT_APP_EVENTS_URL)\n            .then(res => res.json(), error => console.error(error))\n\n            .then(json => {\n                dispatch(receiveEvents(json));\n            });\n    };\n}\n\nexport const ADD_TAG = \"TAG::ADD\";\nexport function addTag(tag) {\n    return {\n        type: ADD_TAG,\n        tag\n    }\n}\n\nexport const REMOVE_TAG = \"TAG::REMOVE\";\nexport function removeTag(tag) {\n    return {\n        type: REMOVE_TAG,\n        tag\n    }\n}\n\nexport const ADD_FAVORITE = \"FAVORITE::ADD\";\nexport function addFavorite(eventID) {\n    return {\n        type: ADD_FAVORITE,\n        eventID\n    }\n}\n\nexport const REMOVE_FAVORITE = \"FAVORITE::REMOVE\";\nexport function removeFavorite(eventID) {\n    return {\n        type: REMOVE_FAVORITE,\n        eventID\n    }\n}\n\nexport const FILTER_FAVORITES = \"FAVORITES::FILTER\";\nexport function filterFavs(checked) {\n    return {\n        type: FILTER_FAVORITES,\n        checked\n    }\n}\n\nexport const SELECT_EVENT = \"EVENT::SELECTED\";\nexport function selectEvent(id) {\n    return {\n        type: SELECT_EVENT,\n        id\n    }\n}\n","// Generated via http://tools.medialab.sciences-po.fr/iwanthue/index.php\nexport const colors = [\n    \"#d7f2cc\",\n    \"#88aee1\",\n    \"#e6d3a5\",\n    \"#cec9f3\",\n    \"#b9cda1\",\n    \"#dfbbe3\",\n    \"#96bfad\",\n    \"#e8a9a5\",\n    \"#90d3e0\",\n    \"#f3d7b6\",\n    \"#a5cbeb\",\n    \"#ccb295\",\n    \"#b9aace\",\n    \"#c1e2d3\",\n    \"#dfb9be\",\n    \"#c7dfee\",\n    \"#ead9c9\",\n    \"#a9b6cc\",\n    \"#e5d1e3\"\n];\n\nexport const dateTimeFormat = \"MM/dd/yyyy hh:mm aaa\";\nexport const eventTime = \"p\";\nexport const dateFormat = \"M/dd/yyyy\";\nexport const headerDateFormat = \"eeee, LLL d\";\nexport const naviDateFormat = \"MMM d\";\n","// @flow\n\nimport { compareAsc, format, parse } from \"date-fns\";\n\nimport { dateFormat, dateTimeFormat, eventTime, headerDateFormat, naviDateFormat } from \"./constants\";\n\nexport function createDate(date: string, withTime: boolean = true) {\n    const format = withTime ? dateTimeFormat : dateFormat;\n\n    return parse(date, format, new Date());\n}\n\nexport function createDayID(date: string, stringFormat: string) {\n    return format(parse(date, stringFormat, new Date()), naviDateFormat).replace(\" \", \"-\");\n}\n\n// @TODO: This will need to be more robust since some events are overnight\nexport function eventStartEndTime(event: GenConEvent) {\n    const end = createDate(event[\"End Date & Time\"]);\n    return `${format(event[\"Start Date & Time\"], \"EEE. MMM d, h:mm aaa\")} - ${format(end, \"h:mm aaa\")}`;\n}\n\nexport function chunkEvents(events: Array<GenConEvent>) {\n    const chunked = events.reduce((acc: Array<DaysEvents>, event: GenConEvent) => {\n\n        if (typeof event[\"Start Date & Time\"] === \"string\") {\n            event[\"Start Date & Time\"] = createDate(event[\"Start Date & Time\"]);\n        }\n\n        const day: string = format(event[\"Start Date & Time\"], headerDateFormat);\n        const found: void | DaysEvents = acc.find(chunk => chunk.day === day);\n\n        if (found) {\n            found.events.push(event);\n        } else {\n            acc.push({ day, events: [event] });\n        }\n\n        return acc;\n\n    }, []);\n\n    chunked.sort((a, b) => {\n        const first = parse(a.day, headerDateFormat, new Date());\n        const next = parse(b.day, headerDateFormat, new Date());\n\n        return compareAsc(first, next);\n    });\n\n    chunked.forEach(({ events }) => {\n        events.sort((a1, b1) => compareAsc(a1[\"Start Date & Time\"], b1[\"Start Date & Time\"]));\n    });\n\n    return chunked;\n}\n\nexport function eventStartTime(event: GenConEvent) {\n    let startTime = format(event[\"Start Date & Time\"], eventTime);\n\n    return startTime.replace(\":00\", \"\");\n}\n","// @flow\n\nimport { combineReducers } from \"redux\";\n\nimport { ADD_FAVORITE, ADD_TAG, FILTER_FAVORITES, RECEIVE_EVENTS, REMOVE_FAVORITE, REMOVE_TAG, SELECT_EVENT } from \"./Actions\";\nimport { colors } from \"./constants\";\nimport { chunkEvents } from \"./helpers\";\n\nfunction events(state = [], { type, events }: { type: string, events: Array<GenConEvent> }) {\n    switch (type) {\n\n        case RECEIVE_EVENTS:\n\n            // We want to split up the date events into days\n            return chunkEvents(events);\n\n        default:\n            return state;\n    }\n}\n\nfunction tags(state = [], { type, events }) {\n    switch (type) {\n        case RECEIVE_EVENTS:\n            return [...new Set(events.map(event => event['Event Type']))]\n                .sort()\n                .map((tag, index) => {\n                    return {\n                        tag,\n                        color: colors[index]\n                    }\n                });\n        default:\n            return state;\n    }\n}\n\nconst filters = {\n    tags: [],\n    onlyFavs: false\n};\nfunction filter(state = filters, { type, tag, checked = false }) {\n    switch (type) {\n\n        // @NOTE: Not sure if we need add/remove to be separate\n        case ADD_TAG:\n            return { ...state, tags: [...state.tags, tag] };\n        case REMOVE_TAG:\n            return { ...state, tags: state.tags.filter(current => current !== tag) };\n        case FILTER_FAVORITES:\n            return { ...state, onlyFavs: checked };\n        default:\n            return state;\n    }\n}\n\nfunction favorites(state = [], { type, eventID }) {\n    switch (type) {\n        case ADD_FAVORITE:\n            return [...state, eventID];\n        case REMOVE_FAVORITE:\n            return state.filter(current => current !== eventID);\n        default:\n            return state;\n    }\n}\n\nfunction selectedEvent(state = '', { type, id }) {\n    switch (type) {\n        case SELECT_EVENT:\n            return id;\n        default:\n            return state;\n    }\n}\n\nconst genconApp = combineReducers({\n    events,\n    tags,\n    favorites,\n    filter,\n    selectedEvent\n});\n\nexport default genconApp;\n","import localForage from \"localforage\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport genconApp from \"./Reducers\";\n\nconst loggerMiddleware = createLogger();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst persistConfig = {\n    key: \"gca\",\n    storage: localForage\n};\nconst persistedReducer = persistReducer(persistConfig, genconApp);\n\nlet enhancer = composeEnhancers(applyMiddleware(\n    thunkMiddleware,\n    loggerMiddleware\n));\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunkMiddleware);\n}\n\nconst store = createStore(\n    persistedReducer,\n    enhancer\n);\n\nexport default () => {\n    const persistor = persistStore(store);\n    return { store, persistor };\n}\n","import classnames from \"classnames/bind\";\nimport React from \"react\";\n\nimport styles from \"./Favorite.module.css\";\n\nlet cx = classnames.bind(styles);\n\nconst Favorite = ({ id, onClick, name, checked = false }) => {\n\n    const svgClasses = cx({\n        \"-checked\": checked,\n        star: true\n    });\n\n    return (\n        <div className={styles.favorite}>\n            <label htmlFor={id}>\n                <span>Favorite</span>\n                <svg className={svgClasses} role=\"presentation\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\">\n                    <path d=\"m12-1.7e-7 3.668 8.155l8.332 1.151-6.064 5.828 1.48 8.866-7.416-4.554-7.417 4.554 1.481-8.866-6.064-5.828 8.332-1.151z\" />\n                    <g strokeWidth=\"2\">\n                        <circle className={styles.explosion} cx=\"12\" cy=\"12\" r=\"12\" />\n                    </g>\n                </svg>\n            </label>\n            <input\n                type=\"checkbox\"\n                id={id}\n                name={name}\n                onChange={onClick}\n                checked={checked}\n            />\n        </div>\n    );\n}\n\nexport default Favorite;\n","import React from \"react\";\n\nimport { eventStartTime } from \"../helpers\";\nimport styles from \"./Event.module.css\";\nimport Favorite from \"./Favorite\";\n\nconst Event = ({ event, onClick, onFav, isFav }) => {\n\n    const id = event[\"Game ID\"];\n\n    return (\n        <li className={styles.event}>\n            <div onClick={onClick.bind(this, id)}>\n                <p>{eventStartTime(event)}</p>\n                <div>\n                    <p>{event[\"Title\"]}</p>\n                    <p>{event[\"Event Type\"].slice(6)}</p>\n                </div>\n            </div>\n            <Favorite\n                id={id}\n                onClick={onFav}\n                name={id}\n                checked={isFav}\n            />\n        </li>\n    );\n}\n\nexport default Event;\n","// @flow\nimport React, { Component } from 'react';\n\nimport Event from \"./Event\";\n\ntype Props = {\n    events: Array<GenConEvent>,\n    favs: Array<string>,\n    onEventClick: Function,\n    onFav: Function\n};\n\nclass ListOfEvents extends Component<Props> {\n\n    shouldComponentUpdate(nextProps: Props) {\n        if (nextProps.events.length === this.props.events.length ||\n            nextProps.favs.length === this.props.favs.length) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    render() {\n\n        const { events, favs, onEventClick, onFav } = this.props;\n\n        const daysEvents = events.map(event => {\n\n            const id = event[\"Game ID\"];\n            const isFav = favs.includes(id);\n\n            // @TODO: Don't trigger the dialog if the favorite input is clicked\n            return (\n                <Event\n                    key={id}\n                    event={event}\n                    isFav={isFav}\n                    onClick={onEventClick}\n                    onFav={onFav}\n                />\n            );\n        });\n\n        return (\n            <ul>\n                { daysEvents }\n            </ul>\n        );\n    }\n}\n\nexport default ListOfEvents;\n","// @flow\n\nimport React, { Component } from \"react\";\n\nimport { headerDateFormat } from \"../constants\";\nimport { createDayID } from \"../helpers\";\nimport styles from \"./DaysList.module.css\";\nimport ListOfEvents from \"./ListOfEvents\";\n\ntype Props = {\n    events: Array<DaysEvents>,\n    onFav: Function,\n    favs: Array<string>,\n    onEventClick: Function\n}\n\nclass DaysList extends Component<Props> {\n\n    render() {\n        const list = this.props.events.map(({ day, events }) => {\n            return (\n                <li key={day} id={createDayID(day, headerDateFormat)}>\n                    <h2>{day}</h2>\n                    <ListOfEvents\n                        events={ events }\n                        favs={ this.props.favs }\n                        onFav={ this.props.onFav }\n                        onEventClick={ this.props.onEventClick }\n                    />\n                </li>\n            );\n        });\n\n        return <ul className={styles[\"event-list\"]}>{list}</ul>;\n    }\n}\n\nexport default DaysList;\n","// @flow\n\nimport * as React from \"react\";\n\nimport styles from \"./AllEvents.module.css\";\nimport DaysList from \"./DaysList\";\n\ntype Props = {\n    children: React.Element<typeof DaysList>\n}\n\nconst Events = ({ children }: Props) => {\n    return (\n        <div className={styles.events}>\n            {children}\n        </div>\n    );\n}\n\nexport default Events;\n","// @flow\n\nimport * as React from 'react';\n\nimport DaysList from \"./DaysList\";\n\ntype Props = {\n    children: React.Element<typeof DaysList>\n}\n\nconst RelatedEvents = ({ children }: Props) => {\n\n    return (\n        <div>\n            <h2>Related Events</h2>\n            { children }\n        </div>\n    );\n}\n\nexport default RelatedEvents;\n","// @flow\n\nimport * as React from \"react\";\n\nimport { eventStartEndTime } from '../helpers';\nimport styles from \"./EventDetail.module.css\";\nimport RelatedEvents from \"./RelatedEvents\";\n\ntype Props = {\n    event: GenConEvent,\n    relatedEvents: React.Element<typeof RelatedEvents>\n};\n\nconst EventDetail = ({ event, relatedEvents }: Props) => {\n\n    return (\n        <div className={styles[\"event-detail\"]}>\n            <h1>{event[\"Title\"]}</h1>\n            <p>{eventStartEndTime(event)}</p>\n            <p className={styles[\"location\"]}>\n                <span>{event[\"Location\"]}</span>\n                <span>{event[\"Room Name\"]}</span>\n                <span>{event[\"Table Number\"]}</span>\n            </p>\n            <p>{event[\"Short Description\"]}</p>\n            <p>{event[\"Long Description\"]}</p>\n            <p>{event[\"Event Type\"].slice(6)}</p>\n            {relatedEvents}\n        </div>\n    );\n}\n\nexport default EventDetail;\n","// @flow\n\nimport * as React from \"react\";\n\nimport styles from \"./Dialog.module.css\";\nimport EventDetail from \"./EventDetail\";\nimport RelatedEvents from \"./RelatedEvents\";\n\ntype Props = {\n    event: GenConEvent,\n    onClose: Function,\n    relatedEvents: React.Element<typeof RelatedEvents>\n};\n\nconst Dialog = ({ event, onClose, relatedEvents }: Props) => {\n\n    return (\n        <dialog className={ styles[\"event-dialog\"] }>\n            <section>\n                <button type=\"button\" onClick={ onClose }>Close</button>\n                { event  &&\n                    <EventDetail event={ event } relatedEvents={ relatedEvents }/> }\n            </section>\n        </dialog>\n    );\n}\n\nexport default Dialog;\n","// @flow\n\nimport classNames from \"classnames\";\nimport React, { Component } from 'react';\n\nimport styles from \"./Nav.module.css\";\n\ntype P = {\n    days: Array<NaviDay>\n};\n\ntype S = {\n    activeDay: string;\n};\n\nclass Nav extends Component<P, S> {\n\n    state = {\n        activeDay: ''\n    };\n\n    onClick = ({ target: { hash } }: { target: HTMLAnchorElement }) => {\n        this.setState({ activeDay: hash });\n    }\n\n    render() {\n\n        const { days } = this.props;\n\n        const list = days.map(({ value, formatted }: { value: string, formatted: string }, i) => {\n\n            const href = `#${formatted}`.replace(\" \", \"-\");\n\n            // If no date is chosen mark the first as \"active\"\n            const classes = classNames({\n                [styles[\"-active\"]]: (this.state.activeDay === '' && i === 0) || (this.state.activeDay === href)\n            });\n\n            return <li key={value} className={classes}>\n                    <a href={href} onClick={this.onClick}>\n                        {formatted}\n                    </a>\n                </li>;\n        });\n\n        return (\n            <nav className={styles[\"event-days\"]}>\n                <ul>{list}</ul>\n            </nav>\n        );\n    }\n}\n\nexport default Nav;\n","import classNames from \"classnames/bind\";\nimport React from 'react';\nimport styles from './Tags.module.css';\n\nlet cx = classNames.bind(styles);\n\nconst TagList = ({tags, selectedTags, onTagSelection}) => {\n\n    const list = tags.map(({tag, color}) => {\n\n        const checked = selectedTags.includes(tag);\n        const classes = cx({\n            '-checked': checked,\n            tag: true\n        });\n\n        return (\n            <div key={tag} className={classes} style={{'--tag-color': color }}>\n                <label htmlFor={tag}><span>{tag.slice(6)}</span></label>\n                <input type=\"checkbox\" name={tag} id={tag} onChange={onTagSelection} checked={checked} />\n            </div>\n        );\n    });\n\n    return (\n        <div className={styles.tags}>\n            <form>{list}</form>\n        </div>\n    );\n};\n\nexport default TagList;\n","import * as dialogPolyfill from '../node_modules/dialog-polyfill/dialog-polyfill.js';\n\nexport default dialogPolyfill;\n","// @flow\n\nimport { format, parse } from \"date-fns\";\nimport { createSelector } from \"reselect\";\n\nimport { headerDateFormat, naviDateFormat } from \"./constants\";\nimport { chunkEvents } from \"./helpers\";\n\nconst getEvents = state => state.events;\nconst getSelectedTags = state => state.filter.tags;\nconst getFavs = state => state.favorites;\nconst isOnlyFavorites = state => state.filter.onlyFavs;\nconst selectedEventID = state => state.selectedEvent;\n\nexport const filteredEvents = createSelector(\n    [getSelectedTags, isOnlyFavorites, getFavs, getEvents],\n    (tags, onlyFavs, favs, events) => {\n        let filterdResults = events;\n\n        if (tags.length) {\n            filterdResults = filterdResults.map(({ day, events }) => {\n                return {\n                    day,\n                    events: events.filter(event =>\n                        tags.includes(event[\"Event Type\"])\n                    )\n                };\n            });\n        }\n\n        if (onlyFavs) {\n            filterdResults = filterdResults.map(({ day, events }) => {\n                return {\n                    day,\n                    events: events.filter(event =>\n                        favs.includes(event[\"Game ID\"])\n                    )\n                };\n            });\n        }\n\n        return filterdResults;\n    }\n);\n\nexport const eventDays = createSelector(\n    [getEvents],\n    (events) => {\n        return events.reduce((acc, event) => {\n            acc.push({\n                value: event.day,\n                formatted: format(\n                    parse(event.day, headerDateFormat, new Date()),\n                    naviDateFormat\n                )\n            });\n            return acc;\n        }, []);\n    }\n);\n\nexport const chosenEvent = createSelector(\n    [filteredEvents, selectedEventID],\n    (events: Array<DaysEvents>, eventID: string) => {\n        let selectedEvent = null;\n\n        events.some(({ events }) => {\n            selectedEvent = events.find((singleEvent: GenConEvent) => singleEvent[\"Game ID\"] === eventID)\n\n            return selectedEvent;\n        });\n\n        return selectedEvent;\n    }\n);\n\n\nexport const relatedEvents = createSelector(\n    [filteredEvents, chosenEvent],\n    (filteredEvents: Array<DaysEvents>, chosenEvent: GenConEvent) => {\n\n        if (!chosenEvent) {\n            return [];\n        }\n\n        const flatList = filteredEvents.reduce((acc, { events }) => {\n            const related = events.filter(event => (\n                event[\"Title\"] === chosenEvent[\"Title\"]) &&\n                (event[\"Game ID\"] !== chosenEvent[\"Game ID\"]));\n            acc.push(...related);\n            return acc;\n        }, []);\n\n        return chunkEvents(flatList);\n    }\n);\n","import \"./App.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n    addFavorite,\n    addTag,\n    fetchPosts,\n    filterFavs,\n    removeFavorite,\n    removeTag,\n    selectEvent\n} from \"./Actions\";\nimport storeConfig from \"./Store\";\nimport AllEvents from \"./components/AllEvents\";\nimport DaysList from \"./components/DaysList\";\nimport Dialog from \"./components/Dialog\";\nimport Favorite from \"./components/Favorite\";\nimport Nav from \"./components/Nav\";\nimport RelatedEvents from \"./components/RelatedEvents\";\nimport TagList from \"./components/Tags\";\nimport dialogPolyfill from './polyfills';\nimport { chosenEvent, eventDays, filteredEvents, relatedEvents } from \"./selectors\";\n\nconst { store } = storeConfig();\n\nconst mapStateToProps = state => {\n\n    const { tags, favorites, filter } = state;\n\n    return {\n        tags,\n        favorites,\n        filter,\n        dialogEvent: chosenEvent(state),\n        events: filteredEvents(state),\n        relatedEvents: relatedEvents(state),\n        days: eventDays(state)\n    };\n};\n\nclass App extends Component {\n    componentDidMount() {\n        store.dispatch(fetchPosts());\n\n        dialogPolyfill.registerDialog(this.eventDialog);\n    }\n\n    get eventDialog(): HTMLDialogElement {\n        const eventDialog = document.querySelector('dialog');\n\n        return eventDialog;\n    }\n\n    onTagSelection = ({ target: { name, checked } }) => {\n        if (checked) {\n            store.dispatch(addTag(name));\n        } else {\n            store.dispatch(removeTag(name));\n        }\n    };\n\n    onFav = ({ target: { id, checked } }) => {\n        if (checked) {\n            store.dispatch(addFavorite(id));\n        } else {\n            store.dispatch(removeFavorite(id));\n        }\n    };\n\n    onFilterFavs = ({ target: { checked } }) => {\n        store.dispatch(filterFavs(checked));\n    };\n\n    // @NOTE: Check if we can replace this with the native .showModal() API, however,\n    // will need a polyfill since support is shitty on mobile\n    onShowDialog = (id) => {\n        store.dispatch(selectEvent(id));\n        this.eventDialog.showModal();\n    }\n\n    onHideDialog = () => {\n        this.eventDialog.close();\n    }\n\n    render() {\n\n        const relatedEvents = this.props.relatedEvents.length > 0 && (\n            <RelatedEvents>\n                <DaysList\n                    events={ this.props.relatedEvents }\n                    onFav={ this.onFav }\n                    onEventClick={ () => console.info(\"clicked\") }\n                    favs={ this.props.favorites }\n                />\n            </RelatedEvents>\n        );\n\n        return (\n            <div>\n                <Dialog\n                    show={this.props.showDialog}\n                    event={this.props.dialogEvent}\n                    relatedEvents={relatedEvents}\n                    onClose={this.onHideDialog}\n                />\n                <main className=\"app\">\n                    <div className=\"tag -fav\">\n                        <Favorite\n                            onClick={this.onFilterFavs}\n                            id=\"only-favs\"\n                            name=\"only-favs\"\n                            checked={this.props.filter.onlyFavs}\n                        />\n                    </div>\n                    <TagList\n                        tags={this.props.tags}\n                        onTagSelection={this.onTagSelection}\n                        selectedTags={this.props.filter.tags}\n                    />\n                    <Nav days={this.props.days} />\n                    <AllEvents>\n                        <DaysList\n                            events={this.props.events}\n                            onFav={this.onFav}\n                            favs={this.props.favorites}\n                            onEventClick={this.onShowDialog}\n                        />\n                    </AllEvents>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\n\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from './App';\nimport storeConfig from \"./Store\";\nimport registerServiceWorker from './registerServiceWorker';\n\nconst { persistor, store } = storeConfig();\n\nReactDOM.render(\n    <Provider store={ store }>\n        <PersistGate loading={ null } persistor={ persistor }>\n            <App />\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}